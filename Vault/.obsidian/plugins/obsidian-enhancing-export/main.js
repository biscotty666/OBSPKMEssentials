"use strict";var Rt=(e,l,t)=>{if(!l.has(e))throw TypeError("Cannot "+t)};var At=(e,l,t)=>(Rt(e,l,"read from private field"),t?t.call(e):l.get(e)),rt=(e,l,t)=>{if(l.has(e))throw TypeError("Cannot add the same private member more than once");l instanceof WeakSet?l.add(e):l.set(e,t)},Gt=(e,l,t,c)=>(Rt(e,l,"write to private field"),c?c.call(e,t):l.set(e,t),t);/*!
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository https://github.com/mokeyish/obsidian-enhancing-export .
*/Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const We=require("obsidian"),_c=require("child_process"),ic=require("process"),Cc=require("electron"),Vc=require("fs"),nl=require("path"),en=require("util");function It(e){const l=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(e){for(const t in e)if(t!=="default"){const c=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(l,t,c.get?c:{enumerable:!0,get:()=>e[t]})}}return l.default=e,Object.freeze(l)}const ln=It(We),fe=It(Cc),fl=It(Vc),Rl={Markdown:{name:"Markdown",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown.lua" -s -o "${outputPath}" -t commonmark_x-attributes',extension:".md"},"Markdown (Hugo)":{name:"Markdown (Hugo)",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown+hugo.lua" -s -o "${outputPath}" -t commonmark_x-attributes',extension:".md"},Html:{name:"Html",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/math_block.lua" --embed-resources --standalone --metadata title="${currentFileName}" -s -o "${outputPath}" -t html',customArguments:'--mathjax="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg-full.js"',extension:".html"},TextBundle:{name:"TextBundle",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown.lua" -V media_dir="${outputDir}/${outputFileName}.textbundle/assets" -s -o "${outputDir}/${outputFileName}.textbundle/text.md" -t commonmark_x-attributes',extension:".md"},Typst:{name:"Typst",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/markdown.lua" -s -o "${outputPath}" -t typst',extension:".typ"},PDF:{name:"PDF",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/pdf.lua" ${ options.textemplate ? `--resource-path="${pluginDir}/textemplate" --template="${options.textemplate}"` : ` ` } --embed-resources --standalone -s -o "${outputPath}" -t pdf',customArguments:"--pdf-engine=pdflatex",optionsMeta:{textemplate:"preset:textemplate"},extension:".pdf"},"Word (.docx)":{name:"Word (.docx)",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t docx',extension:".docx"},OpenOffice:{name:"OpenOffice",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t odt',extension:".odt"},RTF:{name:"RTF",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t rtf',extension:".rtf"},Epub:{name:"Epub",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t epub',extension:".epub"},Latex:{name:"Latex",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" ${ options.textemplate ? `--resource-path="${pluginDir}/textemplate" --template="${options.textemplate}"` : ` ` } -s -o "${outputPath}" -t latex',optionsMeta:{textemplate:"preset:textemplate"},extension:".latex"},"Media Wiki":{name:"Media Wiki",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t mediawiki',extension:".mediawiki"},reStructuredText:{name:"reStructuredText",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t rst',extension:".rst"},Textile:{name:"Textile",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t textile',extension:".textile"},OPML:{name:"OPML",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" -s -o "${outputPath}" -t opml',extension:".opml"},"Bibliography (.bib)":{name:"Bibliography",type:"pandoc",arguments:'-f markdown --resource-path="${currentDir}" --resource-path="${attachmentFolderPath}" --lua-filter="${luaDir}/citefilter.lua" -o "${outputPath}" --to=bibtex "${currentPath}"',extension:".bib"},Custom:{name:"Custom",type:"custom",command:"your command",targetFileExtensions:".ext"}};function Ye(e,l,t){return typeof l=="string"&&l.trim()===""&&(l=void 0),t instanceof Array?t.reduce((c,n)=>Ye(c,l,n),e):(t??(t=ic.platform),{...e??{},[t]:l})}function oe(e,l){e??(e={});const t=e[l??ic.platform],c=e["*"];return c&&typeof c=="object"?Object.assign({},c,t):t??c}function P(e,...l){return function(...t){const c=t[t.length-1]||{},n=[e[0]];return l.forEach(function(I,i){const g=Number.isInteger(I)?t[I]:c[I];n.push(g,e[i+1])}),n.join("")}}function ql(e,l){return l=l??{},new Promise((t,c)=>{_c.exec(e,l,(n,I,i)=>{if(n){c(n);return}if(i&&i!==""){c(i);return}t(I)})})}function Zc(e,l={}){for(;;)try{const t=Object.keys(l).filter(tn),c=t.map(n=>l[n]);return new Function(...t,`{ return \`${e.replaceAll("\\","\\\\")}\` }`).bind(l)(...c)}catch(t){if(t instanceof ReferenceError&&t.message.endsWith("is not defined")){const c=t.message.substring(0,t.message.indexOf(" ")),n=Object.keys(l).filter(I=>I.toLowerCase()===c.toLowerCase()).map(I=>l[I]).first()??`\${${c}}`;l[c]=n}else throw t}}const tn=e=>{if(typeof e!="string"||e.trim()!==e)return!1;try{new Function(e,"var "+e)}catch{return!1}return!0},cn={textemplate:{title:"Latex Template",type:"dropdown",options:[{name:"None",value:null},{name:"Dissertation",value:"dissertation.tex"},{name:"Academic Paper",value:"neurips.tex"}]}},Il=(()=>{let e={};return e=Ye(e,{HOME:"${HOME}",PATH:"${PATH}",TEXINPUTS:"${pluginDir}/textemplate/:"},"*"),e=Ye(e,{TEXINPUTS:"${pluginDir}/textemplate/;"},"win32"),e=Ye(e,{PATH:"/usr/local/bin:/Library/TeX/texbin:${PATH}"},"darwin"),e})(),Pe={items:Object.values(Rl).filter(e=>e.type!=="custom"),pandocPath:void 0,defaultExportDirectoryMode:"Auto",openExportedFile:!0,env:Il};function dc(e){var l;return e.type==="pandoc"?e.extension:e.type==="custom"?(l=e.targetFileExtensions)==null?void 0:l.split(",")[0]:""}function oc(e,l){return e=Object.assign({},oe(Il),e),l=Object.assign({HOME:process.env.HOME??process.env.USERPROFILE},process.env,l??{}),Object.fromEntries(Object.entries(e).map(([t,c])=>[t,Zc(c,l)]))}function nn(e){return e?Object.fromEntries(Object.entries(e).map(([l,t])=>[l,typeof t=="string"?cn[t.startsWith("preset:")?t.substring(7):""]:t])):{}}const In=(e,l)=>e===l,he=Symbol("solid-proxy"),$l=Symbol("solid-track"),gn=Symbol("solid-dev-component"),Gl={equals:In};let ac=Ac;const ke=1,hl=2,sc={owned:null,cleanups:null,context:null,owner:null};var ee=null;let Tl=null,$=null,Ie=null,Ue=null,Nl=0;function ll(e,l){const t=$,c=ee,n=e.length===0,I=n?sc:{owned:null,cleanups:null,context:null,owner:l===void 0?c:l},i=n?e:()=>e(()=>v(()=>Yl(I)));ee=I,$=null;try{return De(i,!0)}finally{$=t,ee=c}}function Ce(e,l){l=l?Object.assign({},Gl,l):Gl;const t={value:e,observers:null,observerSlots:null,comparator:l.equals||void 0},c=n=>(typeof n=="function"&&(n=n(t.value)),Rc(t,n));return[bc.bind(t),c]}function ne(e,l,t){const c=gt(e,l,!1,ke);Vl(c)}function ue(e,l,t){ac=on;const c=gt(e,l,!1,ke);(!t||!t.render)&&(c.user=!0),Ue?Ue.push(c):Vl(c)}function ce(e,l,t){t=t?Object.assign({},Gl,t):Gl;const c=gt(e,l,!0,0);return c.observers=null,c.observerSlots=null,c.comparator=t.equals||void 0,Vl(c),bc.bind(c)}function Al(e){return De(e,!1)}function v(e){if($===null)return e();const l=$;$=null;try{return e()}finally{$=l}}function Wc(e){ue(()=>v(e))}function Cl(e){return ee===null||(ee.cleanups===null?ee.cleanups=[e]:ee.cleanups.push(e)),e}function mc(){return $}function Cn(e,l){const t=Symbol("context");return{id:t,Provider:sn(t),defaultValue:e}}function Vn(e){let l;return(l=hc(ee,e.id))!==void 0?l:e.defaultValue}function Xc(e){const l=ce(e),t=ce(()=>_l(l()));return t.toArray=()=>{const c=t();return Array.isArray(c)?c:c!=null?[c]:[]},t}function bc(){if(this.sources&&this.state)if(this.state===ke)Vl(this);else{const e=Ie;Ie=null,De(()=>Sl(this),!1),Ie=e}if($){const e=this.observers?this.observers.length:0;$.sources?($.sources.push(this),$.sourceSlots.push(e)):($.sources=[this],$.sourceSlots=[e]),this.observers?(this.observers.push($),this.observerSlots.push($.sources.length-1)):(this.observers=[$],this.observerSlots=[$.sources.length-1])}return this.value}function Rc(e,l,t){let c=e.value;return(!e.comparator||!e.comparator(c,l))&&(e.value=l,e.observers&&e.observers.length&&De(()=>{for(let n=0;n<e.observers.length;n+=1){const I=e.observers[n],i=Tl&&Tl.running;i&&Tl.disposed.has(I),(i?!I.tState:!I.state)&&(I.pure?Ie.push(I):Ue.push(I),I.observers&&rc(I)),i||(I.state=ke)}if(Ie.length>1e6)throw Ie=[],new Error},!1)),l}function Vl(e){if(!e.fn)return;Yl(e);const l=ee,t=$,c=Nl;$=ee=e,Zn(e,e.value,c),$=t,ee=l}function Zn(e,l,t){let c;try{c=e.fn(l)}catch(n){return e.pure&&(e.state=ke,e.owned&&e.owned.forEach(Yl),e.owned=null),e.updatedAt=t+1,Gc(n)}(!e.updatedAt||e.updatedAt<=t)&&(e.updatedAt!=null&&"observers"in e?Rc(e,c):e.value=c,e.updatedAt=t)}function gt(e,l,t,c=ke,n){const I={fn:e,state:c,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:l,owner:ee,context:null,pure:t};return ee===null||ee!==sc&&(ee.owned?ee.owned.push(I):ee.owned=[I]),I}function Jl(e){if(e.state===0)return;if(e.state===hl)return Sl(e);if(e.suspense&&v(e.suspense.inFallback))return e.suspense.effects.push(e);const l=[e];for(;(e=e.owner)&&(!e.updatedAt||e.updatedAt<Nl);)e.state&&l.push(e);for(let t=l.length-1;t>=0;t--)if(e=l[t],e.state===ke)Vl(e);else if(e.state===hl){const c=Ie;Ie=null,De(()=>Sl(e,l[0]),!1),Ie=c}}function De(e,l){if(Ie)return e();let t=!1;l||(Ie=[]),Ue?t=!0:Ue=[],Nl++;try{const c=e();return dn(t),c}catch(c){t||(Ue=null),Ie=null,Gc(c)}}function dn(e){if(Ie&&(Ac(Ie),Ie=null),e)return;const l=Ue;Ue=null,l.length&&De(()=>ac(l),!1)}function Ac(e){for(let l=0;l<e.length;l++)Jl(e[l])}function on(e){let l,t=0;for(l=0;l<e.length;l++){const c=e[l];c.user?e[t++]=c:Jl(c)}for(l=0;l<t;l++)Jl(e[l])}function Sl(e,l){e.state=0;for(let t=0;t<e.sources.length;t+=1){const c=e.sources[t];if(c.sources){const n=c.state;n===ke?c!==l&&(!c.updatedAt||c.updatedAt<Nl)&&Jl(c):n===hl&&Sl(c,l)}}}function rc(e){for(let l=0;l<e.observers.length;l+=1){const t=e.observers[l];t.state||(t.state=hl,t.pure?Ie.push(t):Ue.push(t),t.observers&&rc(t))}}function Yl(e){let l;if(e.sources)for(;e.sources.length;){const t=e.sources.pop(),c=e.sourceSlots.pop(),n=t.observers;if(n&&n.length){const I=n.pop(),i=t.observerSlots.pop();c<n.length&&(I.sourceSlots[i]=c,n[c]=I,t.observerSlots[c]=i)}}if(e.owned){for(l=e.owned.length-1;l>=0;l--)Yl(e.owned[l]);e.owned=null}if(e.cleanups){for(l=e.cleanups.length-1;l>=0;l--)e.cleanups[l]();e.cleanups=null}e.state=0,e.context=null}function an(e){return e instanceof Error?e:new Error(typeof e=="string"?e:"Unknown error",{cause:e})}function Gc(e,l=ee){throw an(e)}function hc(e,l){return e?e.context&&e.context[l]!==void 0?e.context[l]:hc(e.owner,l):void 0}function _l(e){if(typeof e=="function"&&!e.length)return _l(e());if(Array.isArray(e)){const l=[];for(let t=0;t<e.length;t++){const c=_l(e[t]);Array.isArray(c)?l.push.apply(l,c):l.push(c)}return l}return e}function sn(e,l){return function(c){let n;return ne(()=>n=v(()=>(ee.context={[e]:c.value},Xc(()=>c.children))),void 0),n}}const Wn=Symbol("fallback");function ht(e){for(let l=0;l<e.length;l++)e[l]()}function mn(e,l,t={}){let c=[],n=[],I=[],i=0,g=l.length>1?[]:null;return Cl(()=>ht(I)),()=>{let C=e()||[],r,d;return C[$l],v(()=>{let p=C.length,s,D,K,a,L,T,M,O,E;if(p===0)i!==0&&(ht(I),I=[],c=[],n=[],i=0,g&&(g=[])),t.fallback&&(c=[Wn],n[0]=ll(de=>(I[0]=de,t.fallback())),i=1);else if(i===0){for(n=new Array(p),d=0;d<p;d++)c[d]=C[d],n[d]=ll(m);i=p}else{for(K=new Array(p),a=new Array(p),g&&(L=new Array(p)),T=0,M=Math.min(i,p);T<M&&c[T]===C[T];T++);for(M=i-1,O=p-1;M>=T&&O>=T&&c[M]===C[O];M--,O--)K[O]=n[M],a[O]=I[M],g&&(L[O]=g[M]);for(s=new Map,D=new Array(O+1),d=O;d>=T;d--)E=C[d],r=s.get(E),D[d]=r===void 0?-1:r,s.set(E,d);for(r=T;r<=M;r++)E=c[r],d=s.get(E),d!==void 0&&d!==-1?(K[d]=n[r],a[d]=I[r],g&&(L[d]=g[r]),d=D[d],s.set(E,d)):I[r]();for(d=T;d<p;d++)d in K?(n[d]=K[d],I[d]=a[d],g&&(g[d]=L[d],g[d](d))):n[d]=ll(m);n=n.slice(0,i=p),c=C.slice(0)}return n});function m(p){if(I[d]=p,g){const[s,D]=Ce(d);return g[d]=D,l(C[d],s)}return l(C[d])}}}function X(e,l){return v(()=>e(l||{}))}function al(){return!0}const Jt={get(e,l,t){return l===he?t:e.get(l)},has(e,l){return l===he?!0:e.has(l)},set:al,deleteProperty:al,getOwnPropertyDescriptor(e,l){return{configurable:!0,enumerable:!0,get(){return e.get(l)},set:al,deleteProperty:al}},ownKeys(e){return e.keys()}};function Xn(e,...l){if(he in e){const n=new Set(l.length>1?l.flat():l[0]),I=l.map(i=>new Proxy({get(g){return i.includes(g)?e[g]:void 0},has(g){return i.includes(g)&&g in e},keys(){return i.filter(g=>g in e)}},Jt));return I.push(new Proxy({get(i){return n.has(i)?void 0:e[i]},has(i){return n.has(i)?!1:i in e},keys(){return Object.keys(e).filter(i=>!n.has(i))}},Jt)),I}const t={},c=l.map(()=>({}));for(const n of Object.getOwnPropertyNames(e)){const I=Object.getOwnPropertyDescriptor(e,n),i=!I.get&&!I.set&&I.enumerable&&I.writable&&I.configurable;let g=!1,C=0;for(const r of l)r.includes(n)&&(g=!0,i?c[C][n]=I.value:Object.defineProperty(c[C],n,I)),++C;g||(i?t[n]=I.value:Object.defineProperty(t,n,I))}return[...c,t]}const Jc=e=>`Stale read from <${e}>.`;function Sc(e){const l="fallback"in e&&{fallback:()=>e.fallback};return ce(mn(()=>e.each,e.children,l||void 0))}function rl(e){const l=e.keyed,t=ce(()=>e.when,void 0,{equals:(c,n)=>l?c===n:!c==!n});return ce(()=>{const c=t();if(c){const n=e.children;return typeof n=="function"&&n.length>0?v(()=>n(l?c:()=>{if(!v(t))throw Jc("Show");return e.when})):n}return e.fallback},void 0,void 0)}function bn(e){let l=!1;const t=(I,i)=>I[0]===i[0]&&(l?I[1]===i[1]:!I[1]==!i[1])&&I[2]===i[2],c=Xc(()=>e.children),n=ce(()=>{let I=c();Array.isArray(I)||(I=[I]);for(let i=0;i<I.length;i++){const g=I[i].when;if(g)return l=!!I[i].keyed,[i,g,I[i]]}return[-1]},void 0,{equals:t});return ce(()=>{const[I,i,g]=n();if(I<0)return e.fallback;const C=g.children;return typeof C=="function"&&C.length>0?v(()=>C(l?i:()=>{if(v(n)[0]!==I)throw Jc("Match");return g.when})):C},void 0,void 0)}function St(e){return e}const Rn=["allowfullscreen","async","autofocus","autoplay","checked","controls","default","disabled","formnovalidate","hidden","indeterminate","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","seamless","selected"],An=new Set(["className","value","readOnly","formNoValidate","isMap","noModule","playsInline",...Rn]),rn=new Set(["innerHTML","textContent","innerText","children"]),Gn=Object.assign(Object.create(null),{className:"class",htmlFor:"for"}),hn=Object.assign(Object.create(null),{class:"className",formnovalidate:{$:"formNoValidate",BUTTON:1,INPUT:1},ismap:{$:"isMap",IMG:1},nomodule:{$:"noModule",SCRIPT:1},playsinline:{$:"playsInline",VIDEO:1},readonly:{$:"readOnly",INPUT:1,TEXTAREA:1}});function Jn(e,l){const t=hn[e];return typeof t=="object"?t[l]?t.$:void 0:t}const Sn=new Set(["beforeinput","click","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"]),Fn=new Set(["altGlyph","altGlyphDef","altGlyphItem","animate","animateColor","animateMotion","animateTransform","circle","clipPath","color-profile","cursor","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","font","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignObject","g","glyph","glyphRef","hkern","image","line","linearGradient","marker","mask","metadata","missing-glyph","mpath","path","pattern","polygon","polyline","radialGradient","rect","set","stop","svg","switch","symbol","text","textPath","tref","tspan","use","view","vkern"]),pn={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"};function Un(e,l,t){let c=t.length,n=l.length,I=c,i=0,g=0,C=l[n-1].nextSibling,r=null;for(;i<n||g<I;){if(l[i]===t[g]){i++,g++;continue}for(;l[n-1]===t[I-1];)n--,I--;if(n===i){const d=I<c?g?t[g-1].nextSibling:t[I-g]:C;for(;g<I;)e.insertBefore(t[g++],d)}else if(I===g)for(;i<n;)(!r||!r.has(l[i]))&&l[i].remove(),i++;else if(l[i]===t[I-1]&&t[g]===l[n-1]){const d=l[--n].nextSibling;e.insertBefore(t[g++],l[i++].nextSibling),e.insertBefore(t[--I],d),l[n]=t[I]}else{if(!r){r=new Map;let m=g;for(;m<I;)r.set(t[m],m++)}const d=r.get(l[i]);if(d!=null)if(g<d&&d<I){let m=i,p=1,s;for(;++m<n&&m<I&&!((s=r.get(l[m]))==null||s!==d+p);)p++;if(p>d-g){const D=l[i];for(;g<d;)e.insertBefore(t[g++],D)}else e.replaceChild(t[g++],l[i++])}else i++;else l[i++].remove()}}}const Ft="_$DX_DELEGATE";function me(e,l,t){let c;const n=()=>{const i=document.createElement("template");return i.innerHTML=e,t?i.content.firstChild.firstChild:i.content.firstChild},I=l?()=>v(()=>document.importNode(c||(c=n()),!0)):()=>(c||(c=n())).cloneNode(!0);return I.cloneNode=I,I}function it(e,l=window.document){const t=l[Ft]||(l[Ft]=new Set);for(let c=0,n=e.length;c<n;c++){const I=e[c];t.has(I)||(t.add(I),l.addEventListener(I,Bn))}}function Ne(e,l,t){t==null?e.removeAttribute(l):e.setAttribute(l,t)}function Nn(e,l,t,c){c==null?e.removeAttributeNS(l,t):e.setAttributeNS(l,t,c)}function Fc(e,l){l==null?e.removeAttribute("class"):e.className=l}function Ct(e,l,t,c){if(c)Array.isArray(t)?(e[`$$${l}`]=t[0],e[`$$${l}Data`]=t[1]):e[`$$${l}`]=t;else if(Array.isArray(t)){const n=t[0];e.addEventListener(l,t[0]=I=>n.call(e,t[1],I))}else e.addEventListener(l,t)}function Yn(e,l,t={}){const c=Object.keys(l||{}),n=Object.keys(t);let I,i;for(I=0,i=n.length;I<i;I++){const g=n[I];!g||g==="undefined"||l[g]||(pt(e,g,!1),delete t[g])}for(I=0,i=c.length;I<i;I++){const g=c[I],C=!!l[g];!g||g==="undefined"||t[g]===C||!C||(pt(e,g,!0),t[g]=C)}return t}function Vt(e,l,t){if(!l)return t?Ne(e,"style"):l;const c=e.style;if(typeof l=="string")return c.cssText=l;typeof t=="string"&&(c.cssText=t=void 0),t||(t={}),l||(l={});let n,I;for(I in t)l[I]==null&&c.removeProperty(I),delete t[I];for(I in l)n=l[I],n!==t[I]&&(c.setProperty(I,n),t[I]=n);return t}function un(e,l={},t,c){const n={};return c||ne(()=>n.children=ze(e,l.children,n.children)),ne(()=>l.ref&&l.ref(e)),ne(()=>kn(e,l,t,!0,n,!0)),n}function pc(e,l,t){return v(()=>e(l,t))}function Ve(e,l,t,c){if(t!==void 0&&!c&&(c=[]),typeof l!="function")return ze(e,l,c,t);ne(n=>ze(e,l(),n,t),c)}function kn(e,l,t,c,n={},I=!1){l||(l={});for(const i in n)if(!(i in l)){if(i==="children")continue;n[i]=Ut(e,i,null,n[i],t,I)}for(const i in l){if(i==="children"){c||ze(e,l.children);continue}const g=l[i];n[i]=Ut(e,i,g,n[i],t,I)}}function xn(e){return e.toLowerCase().replace(/-([a-z])/g,(l,t)=>t.toUpperCase())}function pt(e,l,t){const c=l.trim().split(/\s+/);for(let n=0,I=c.length;n<I;n++)e.classList.toggle(c[n],t)}function Ut(e,l,t,c,n,I){let i,g,C,r,d;if(l==="style")return Vt(e,t,c);if(l==="classList")return Yn(e,t,c);if(t===c)return c;if(l==="ref")I||t(e);else if(l.slice(0,3)==="on:"){const m=l.slice(3);c&&e.removeEventListener(m,c),t&&e.addEventListener(m,t)}else if(l.slice(0,10)==="oncapture:"){const m=l.slice(10);c&&e.removeEventListener(m,c,!0),t&&e.addEventListener(m,t,!0)}else if(l.slice(0,2)==="on"){const m=l.slice(2).toLowerCase(),p=Sn.has(m);if(!p&&c){const s=Array.isArray(c)?c[0]:c;e.removeEventListener(m,s)}(p||t)&&(Ct(e,m,t,p),p&&it([m]))}else if(l.slice(0,5)==="attr:")Ne(e,l.slice(5),t);else if((d=l.slice(0,5)==="prop:")||(C=rn.has(l))||!n&&((r=Jn(l,e.tagName))||(g=An.has(l)))||(i=e.nodeName.includes("-")))d&&(l=l.slice(5),g=!0),l==="class"||l==="className"?Fc(e,t):i&&!g&&!C?e[xn(l)]=t:e[r||l]=t;else{const m=n&&l.indexOf(":")>-1&&pn[l.split(":")[0]];m?Nn(e,m,l,t):Ne(e,Gn[l]||l,t)}return t}function Bn(e){const l=`$$${e.type}`;let t=e.composedPath&&e.composedPath()[0]||e.target;for(e.target!==t&&Object.defineProperty(e,"target",{configurable:!0,value:t}),Object.defineProperty(e,"currentTarget",{configurable:!0,get(){return t||document}});t;){const c=t[l];if(c&&!t.disabled){const n=t[`${l}Data`];if(n!==void 0?c.call(t,n,e):c.call(t,e),e.cancelBubble)return}t=t._$host||t.parentNode||t.host}}function ze(e,l,t,c,n){for(;typeof t=="function";)t=t();if(l===t)return t;const I=typeof l,i=c!==void 0;if(e=i&&t[0]&&t[0].parentNode||e,I==="string"||I==="number")if(I==="number"&&(l=l.toString()),i){let g=t[0];g&&g.nodeType===3?g.data=l:g=document.createTextNode(l),t=Ee(e,t,c,g)}else t!==""&&typeof t=="string"?t=e.firstChild.data=l:t=e.textContent=l;else if(l==null||I==="boolean")t=Ee(e,t,c);else{if(I==="function")return ne(()=>{let g=l();for(;typeof g=="function";)g=g();t=ze(e,g,t,c)}),()=>t;if(Array.isArray(l)){const g=[],C=t&&Array.isArray(t);if(et(g,l,t,n))return ne(()=>t=ze(e,g,t,c,!0)),()=>t;if(g.length===0){if(t=Ee(e,t,c),i)return t}else C?t.length===0?Nt(e,g,c):Un(e,t,g):(t&&Ee(e),Nt(e,g));t=g}else if(l.nodeType){if(Array.isArray(t)){if(i)return t=Ee(e,t,c,l);Ee(e,t,null,l)}else t==null||t===""||!e.firstChild?e.appendChild(l):e.replaceChild(l,e.firstChild);t=l}else console.warn("Unrecognized value. Skipped inserting",l)}return t}function et(e,l,t,c){let n=!1;for(let I=0,i=l.length;I<i;I++){let g=l[I],C=t&&t[I],r;if(!(g==null||g===!0||g===!1))if((r=typeof g)=="object"&&g.nodeType)e.push(g);else if(Array.isArray(g))n=et(e,g,C)||n;else if(r==="function")if(c){for(;typeof g=="function";)g=g();n=et(e,Array.isArray(g)?g:[g],Array.isArray(C)?C:[C])||n}else e.push(g),n=!0;else{const d=String(g);C&&C.nodeType===3&&C.data===d?e.push(C):e.push(document.createTextNode(d))}}return n}function Nt(e,l,t=null){for(let c=0,n=l.length;c<n;c++)e.insertBefore(l[c],t)}function Ee(e,l,t,c){if(t===void 0)return e.textContent="";const n=c||document.createTextNode("");if(l.length){let I=!1;for(let i=l.length-1;i>=0;i--){const g=l[i];if(n!==g){const C=g.parentNode===e;!I&&!i?C?e.replaceChild(n,g):e.insertBefore(n,t):C&&g.remove()}else I=!0}}else e.insertBefore(n,t);return[n]}const yn="http://www.w3.org/2000/svg";function fn(e,l=!1){return l?document.createElementNS(yn,e):document.createElement(e)}function Tn(e){const[l,t]=Xn(e,["component"]),c=ce(()=>l.component);return ce(()=>{const n=c();switch(typeof n){case"function":return Object.assign(n,{[gn]:!0}),v(()=>n(t));case"string":const I=Fn.has(n),i=fn(n,I);return un(i,t,I),i}})}/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */function $e(e){if(e!==e.toLowerCase()&&e!==e.toUpperCase()||(e=e.toLowerCase()),e.indexOf("-")===-1&&e.indexOf("_")===-1)return e;{let t="",c=!1;const n=e.match(/^-+/);for(let I=n?n[0].length:0;I<e.length;I++){let i=e.charAt(I);c&&(c=!1,i=i.toUpperCase()),I!==0&&(i==="-"||i==="_")?c=!0:i!=="-"&&i!=="_"&&(t+=i)}return t}}function Uc(e,l){const t=e.toLowerCase();l=l||"-";let c="";for(let n=0;n<e.length;n++){const I=t.charAt(n),i=e.charAt(n);I!==i&&n>0?c+=`${l}${t.charAt(n)}`:c+=i}return c}function Nc(e){return e==null?!1:typeof e=="number"||/^0x[0-9a-f]+$/i.test(e)?!0:/^0[^.]/.test(e)?!1:/^[-]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e)}/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */function Qn(e){if(Array.isArray(e))return e.map(i=>typeof i!="string"?i+"":i);e=e.trim();let l=0,t=null,c=null,n=null;const I=[];for(let i=0;i<e.length;i++){if(t=c,c=e.charAt(i),c===" "&&!n){t!==" "&&l++;continue}c===n?n=null:(c==="'"||c==='"')&&!n&&(n=c),I[l]||(I[l]=""),I[l]+=c}return I}/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */var ae;(function(e){e.BOOLEAN="boolean",e.STRING="string",e.NUMBER="number",e.ARRAY="array"})(ae||(ae={}));/**
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */let Se;class En{constructor(l){Se=l}parse(l,t){const c=Object.assign({alias:void 0,array:void 0,boolean:void 0,config:void 0,configObjects:void 0,configuration:void 0,coerce:void 0,count:void 0,default:void 0,envPrefix:void 0,narg:void 0,normalize:void 0,string:void 0,number:void 0,__:void 0,key:void 0},t),n=Qn(l),I=typeof l=="string",i=Kn(Object.assign(Object.create(null),c.alias)),g=Object.assign({"boolean-negation":!0,"camel-case-expansion":!0,"combine-arrays":!1,"dot-notation":!0,"duplicate-arguments-array":!0,"flatten-duplicate-arrays":!0,"greedy-arrays":!0,"halt-at-non-option":!1,"nargs-eats-options":!1,"negation-prefix":"no-","parse-numbers":!0,"parse-positional-numbers":!0,"populate--":!1,"set-placeholder-key":!1,"short-option-groups":!0,"strip-aliased":!1,"strip-dashed":!1,"unknown-options-as-args":!1},c.configuration),C=Object.assign(Object.create(null),c.default),r=c.configObjects||[],d=c.envPrefix,m=g["populate--"],p=m?"--":"_",s=Object.create(null),D=Object.create(null),K=c.__||Se.format,a={aliases:Object.create(null),arrays:Object.create(null),bools:Object.create(null),strings:Object.create(null),numbers:Object.create(null),counts:Object.create(null),normalize:Object.create(null),configs:Object.create(null),nargs:Object.create(null),coercions:Object.create(null),keys:[]},L=/^-([0-9]+(\.[0-9]+)?|\.[0-9]+)$/,T=new RegExp("^--"+g["negation-prefix"]+"(.+)");[].concat(c.array||[]).filter(Boolean).forEach(function(V){const o=typeof V=="object"?V.key:V,A=Object.keys(V).map(function(W){return{boolean:"bools",string:"strings",number:"numbers"}[W]}).filter(Boolean).pop();A&&(a[A][o]=!0),a.arrays[o]=!0,a.keys.push(o)}),[].concat(c.boolean||[]).filter(Boolean).forEach(function(V){a.bools[V]=!0,a.keys.push(V)}),[].concat(c.string||[]).filter(Boolean).forEach(function(V){a.strings[V]=!0,a.keys.push(V)}),[].concat(c.number||[]).filter(Boolean).forEach(function(V){a.numbers[V]=!0,a.keys.push(V)}),[].concat(c.count||[]).filter(Boolean).forEach(function(V){a.counts[V]=!0,a.keys.push(V)}),[].concat(c.normalize||[]).filter(Boolean).forEach(function(V){a.normalize[V]=!0,a.keys.push(V)}),typeof c.narg=="object"&&Object.entries(c.narg).forEach(([V,o])=>{typeof o=="number"&&(a.nargs[V]=o,a.keys.push(V))}),typeof c.coerce=="object"&&Object.entries(c.coerce).forEach(([V,o])=>{typeof o=="function"&&(a.coercions[V]=o,a.keys.push(V))}),typeof c.config<"u"&&(Array.isArray(c.config)||typeof c.config=="string"?[].concat(c.config).filter(Boolean).forEach(function(V){a.configs[V]=!0}):typeof c.config=="object"&&Object.entries(c.config).forEach(([V,o])=>{(typeof o=="boolean"||typeof o=="function")&&(a.configs[V]=o)})),_(c.key,i,c.default,a.arrays),Object.keys(C).forEach(function(V){(a.aliases[V]||[]).forEach(function(o){C[o]=C[V]})});let M=null;$c();let O=[];const E=Object.assign(Object.create(null),{_:[]}),de={};for(let V=0;V<n.length;V++){const o=n[V],A=o.replace(/^-{3,}/,"---");let W,Z,U,S,Y,le;if(o!=="--"&&/^-/.test(o)&&ol(o))h(o);else if(A.match(/^---+(=|$)/)){h(o);continue}else if(o.match(/^--.+=/)||!g["short-option-groups"]&&o.match(/^-.+=/))S=o.match(/^--?([^=]+)=([\s\S]*)$/),S!==null&&Array.isArray(S)&&S.length>=3&&(F(S[1],a.arrays)?V=R(V,S[1],n,S[2]):F(S[1],a.nargs)!==!1?V=B(V,S[1],n,S[2]):G(S[1],S[2],!0));else if(o.match(T)&&g["boolean-negation"])S=o.match(T),S!==null&&Array.isArray(S)&&S.length>=2&&(Z=S[1],G(Z,F(Z,a.arrays)?[!1]:!1));else if(o.match(/^--.+/)||!g["short-option-groups"]&&o.match(/^-[^-]+/))S=o.match(/^--?(.+)/),S!==null&&Array.isArray(S)&&S.length>=2&&(Z=S[1],F(Z,a.arrays)?V=R(V,Z,n):F(Z,a.nargs)!==!1?V=B(V,Z,n):(Y=n[V+1],Y!==void 0&&(!Y.match(/^-/)||Y.match(L))&&!F(Z,a.bools)&&!F(Z,a.counts)||/^(true|false)$/.test(Y)?(G(Z,Y),V++):G(Z,Qe(Z))));else if(o.match(/^-.\..+=/))S=o.match(/^-([^=]+)=([\s\S]*)$/),S!==null&&Array.isArray(S)&&S.length>=3&&G(S[1],S[2]);else if(o.match(/^-.\..+/)&&!o.match(L))Y=n[V+1],S=o.match(/^-(.\..+)/),S!==null&&Array.isArray(S)&&S.length>=2&&(Z=S[1],Y!==void 0&&!Y.match(/^-/)&&!F(Z,a.bools)&&!F(Z,a.counts)?(G(Z,Y),V++):G(Z,Qe(Z)));else if(o.match(/^-[^-]+/)&&!o.match(L)){U=o.slice(1,-1).split(""),W=!1;for(let ge=0;ge<U.length;ge++){if(Y=o.slice(ge+2),U[ge+1]&&U[ge+1]==="="){le=o.slice(ge+3),Z=U[ge],F(Z,a.arrays)?V=R(V,Z,n,le):F(Z,a.nargs)!==!1?V=B(V,Z,n,le):G(Z,le),W=!0;break}if(Y==="-"){G(U[ge],Y);continue}if(/[A-Za-z]/.test(U[ge])&&/^-?\d+(\.\d*)?(e-?\d+)?$/.test(Y)&&F(Y,a.bools)===!1){G(U[ge],Y),W=!0;break}if(U[ge+1]&&U[ge+1].match(/\W/)){G(U[ge],Y),W=!0;break}else G(U[ge],Qe(U[ge]))}Z=o.slice(-1)[0],!W&&Z!=="-"&&(F(Z,a.arrays)?V=R(V,Z,n):F(Z,a.nargs)!==!1?V=B(V,Z,n):(Y=n[V+1],Y!==void 0&&(!/^(-|--)[^-]/.test(Y)||Y.match(L))&&!F(Z,a.bools)&&!F(Z,a.counts)||/^(true|false)$/.test(Y)?(G(Z,Y),V++):G(Z,Qe(Z))))}else if(o.match(/^-[0-9]$/)&&o.match(L)&&F(o.slice(1),a.bools))Z=o.slice(1),G(Z,Qe(Z));else if(o==="--"){O=n.slice(V+1);break}else if(g["halt-at-non-option"]){O=n.slice(V);break}else h(o)}k(E,!0),k(E,!1),b(E),u(),z(E,a.aliases,C,!0),N(E),g["set-placeholder-key"]&&f(E),Object.keys(a.counts).forEach(function(V){y(E,V.split("."))||G(V,0)}),m&&O.length&&(E[p]=[]),O.forEach(function(V){E[p].push(V)}),g["camel-case-expansion"]&&g["strip-dashed"]&&Object.keys(E).filter(V=>V!=="--"&&V.includes("-")).forEach(V=>{delete E[V]}),g["strip-aliased"]&&[].concat(...Object.keys(i).map(V=>i[V])).forEach(V=>{g["camel-case-expansion"]&&V.includes("-")&&delete E[V.split(".").map(o=>$e(o)).join(".")],delete E[V]});function h(V){const o=J("_",V);(typeof o=="string"||typeof o=="number")&&E._.push(o)}function B(V,o,A,W){let Z,U=F(o,a.nargs);if(U=typeof U!="number"||isNaN(U)?1:U,U===0)return Je(W)||(M=Error(K("Argument unexpected for: %s",o))),G(o,Qe(o)),V;let S=Je(W)?0:1;if(g["nargs-eats-options"])A.length-(V+1)+S<U&&(M=Error(K("Not enough arguments following: %s",o))),S=U;else{for(Z=V+1;Z<A.length&&(!A[Z].match(/^-[^0-9]/)||A[Z].match(L)||ol(A[Z]));Z++)S++;S<U&&(M=Error(K("Not enough arguments following: %s",o)))}let Y=Math.min(S,U);for(!Je(W)&&Y>0&&(G(o,W),Y--),Z=V+1;Z<Y+V+1;Z++)G(o,A[Z]);return V+Y}function R(V,o,A,W){let Z=[],U=W||A[V+1];const S=F(o,a.nargs);if(F(o,a.bools)&&!/^(true|false)$/.test(U))Z.push(!0);else if(Je(U)||Je(W)&&/^-/.test(U)&&!L.test(U)&&!ol(U)){if(C[o]!==void 0){const Y=C[o];Z=Array.isArray(Y)?Y:[Y]}}else{Je(W)||Z.push(j(o,W,!0));for(let Y=V+1;Y<A.length&&!(!g["greedy-arrays"]&&Z.length>0||S&&typeof S=="number"&&Z.length>=S||(U=A[Y],/^-/.test(U)&&!L.test(U)&&!ol(U)));Y++)V=Y,Z.push(j(o,U,I))}return typeof S=="number"&&(S&&Z.length<S||isNaN(S)&&Z.length===0)&&(M=Error(K("Not enough arguments following: %s",o))),G(o,Z),V}function G(V,o,A=I){if(/-/.test(V)&&g["camel-case-expansion"]){const U=V.split(".").map(function(S){return $e(S)}).join(".");Re(V,U)}const W=j(V,o,A),Z=V.split(".");Q(E,Z,W),a.aliases[V]&&a.aliases[V].forEach(function(U){const S=U.split(".");Q(E,S,W)}),Z.length>1&&g["dot-notation"]&&(a.aliases[Z[0]]||[]).forEach(function(U){let S=U.split(".");const Y=[].concat(Z);Y.shift(),S=S.concat(Y),(a.aliases[V]||[]).includes(S.join("."))||Q(E,S,W)}),F(V,a.normalize)&&!F(V,a.arrays)&&[V].concat(a.aliases[V]||[]).forEach(function(S){Object.defineProperty(de,S,{enumerable:!0,get(){return o},set(Y){o=typeof Y=="string"?Se.normalize(Y):Y}})})}function Re(V,o){a.aliases[V]&&a.aliases[V].length||(a.aliases[V]=[o],s[o]=!0),a.aliases[o]&&a.aliases[o].length||Re(o,V)}function j(V,o,A){A&&(o=Hn(o)),(F(V,a.bools)||F(V,a.counts))&&typeof o=="string"&&(o=o==="true");let W=Array.isArray(o)?o.map(function(Z){return J(V,Z)}):J(V,o);return F(V,a.counts)&&(Je(W)||typeof W=="boolean")&&(W=Ql()),F(V,a.normalize)&&F(V,a.arrays)&&(Array.isArray(o)?W=o.map(Z=>Se.normalize(Z)):W=Se.normalize(o)),W}function J(V,o){return!g["parse-positional-numbers"]&&V==="_"||!F(V,a.strings)&&!F(V,a.bools)&&!Array.isArray(o)&&(Nc(o)&&g["parse-numbers"]&&Number.isSafeInteger(Math.floor(parseFloat(`${o}`)))||!Je(o)&&F(V,a.numbers))&&(o=Number(o)),o}function b(V){const o=Object.create(null);z(o,a.aliases,C),Object.keys(a.configs).forEach(function(A){const W=V[A]||o[A];if(W)try{let Z=null;const U=Se.resolve(Se.cwd(),W),S=a.configs[A];if(typeof S=="function"){try{Z=S(U)}catch(Y){Z=Y}if(Z instanceof Error){M=Z;return}}else Z=Se.require(U);x(Z)}catch(Z){Z.name==="PermissionDenied"?M=Z:V[A]&&(M=Error(K("Invalid JSON config file: %s",W)))}})}function x(V,o){Object.keys(V).forEach(function(A){const W=V[A],Z=o?o+"."+A:A;typeof W=="object"&&W!==null&&!Array.isArray(W)&&g["dot-notation"]?x(W,Z):(!y(E,Z.split("."))||F(Z,a.arrays)&&g["combine-arrays"])&&G(Z,W)})}function u(){typeof r<"u"&&r.forEach(function(V){x(V)})}function k(V,o){if(typeof d>"u")return;const A=typeof d=="string"?d:"",W=Se.env();Object.keys(W).forEach(function(Z){if(A===""||Z.lastIndexOf(A,0)===0){const U=Z.split("__").map(function(S,Y){return Y===0&&(S=S.substring(A.length)),$e(S)});(o&&a.configs[U.join(".")]||!o)&&!y(V,U)&&G(U.join("."),W[Z])}})}function N(V){let o;const A=new Set;Object.keys(V).forEach(function(W){if(!A.has(W)&&(o=F(W,a.coercions),typeof o=="function"))try{const Z=J(W,o(V[W]));[].concat(a.aliases[W]||[],W).forEach(U=>{A.add(U),V[U]=Z})}catch(Z){M=Z}})}function f(V){return a.keys.forEach(o=>{~o.indexOf(".")||typeof V[o]>"u"&&(V[o]=void 0)}),V}function z(V,o,A,W=!1){Object.keys(A).forEach(function(Z){y(V,Z.split("."))||(Q(V,Z.split("."),A[Z]),W&&(D[Z]=!0),(o[Z]||[]).forEach(function(U){y(V,U.split("."))||Q(V,U.split("."),A[Z])}))})}function y(V,o){let A=V;g["dot-notation"]||(o=[o.join(".")]),o.slice(0,-1).forEach(function(Z){A=A[Z]||{}});const W=o[o.length-1];return typeof A!="object"?!1:W in A}function Q(V,o,A){let W=V;g["dot-notation"]||(o=[o.join(".")]),o.slice(0,-1).forEach(function(le){le=Yt(le),typeof W=="object"&&W[le]===void 0&&(W[le]={}),typeof W[le]!="object"||Array.isArray(W[le])?(Array.isArray(W[le])?W[le].push({}):W[le]=[W[le],{}],W=W[le][W[le].length-1]):W=W[le]});const Z=Yt(o[o.length-1]),U=F(o.join("."),a.arrays),S=Array.isArray(A);let Y=g["duplicate-arguments-array"];!Y&&F(Z,a.nargs)&&(Y=!0,(!Je(W[Z])&&a.nargs[Z]===1||Array.isArray(W[Z])&&W[Z].length===a.nargs[Z])&&(W[Z]=void 0)),A===Ql()?W[Z]=Ql(W[Z]):Array.isArray(W[Z])?Y&&U&&S?W[Z]=g["flatten-duplicate-arrays"]?W[Z].concat(A):(Array.isArray(W[Z][0])?W[Z]:[W[Z]]).concat([A]):!Y&&!!U==!!S?W[Z]=A:W[Z]=W[Z].concat([A]):W[Z]===void 0&&U?W[Z]=S?A:[A]:Y&&!(W[Z]===void 0||F(Z,a.counts)||F(Z,a.bools))?W[Z]=[W[Z],A]:W[Z]=A}function _(...V){V.forEach(function(o){Object.keys(o||{}).forEach(function(A){a.aliases[A]||(a.aliases[A]=[].concat(i[A]||[]),a.aliases[A].concat(A).forEach(function(W){if(/-/.test(W)&&g["camel-case-expansion"]){const Z=$e(W);Z!==A&&a.aliases[A].indexOf(Z)===-1&&(a.aliases[A].push(Z),s[Z]=!0)}}),a.aliases[A].concat(A).forEach(function(W){if(W.length>1&&/[A-Z]/.test(W)&&g["camel-case-expansion"]){const Z=Uc(W,"-");Z!==A&&a.aliases[A].indexOf(Z)===-1&&(a.aliases[A].push(Z),s[Z]=!0)}}),a.aliases[A].forEach(function(W){a.aliases[W]=[A].concat(a.aliases[A].filter(function(Z){return W!==Z}))}))})})}function F(V,o){const A=[].concat(a.aliases[V]||[],V),W=Object.keys(o),Z=A.find(U=>W.includes(U));return Z?o[Z]:!1}function q(V){const o=Object.keys(a);return[].concat(o.map(W=>a[W])).some(function(W){return Array.isArray(W)?W.includes(V):W[V]})}function Ae(V,...o){return[].concat(...o).some(function(W){const Z=V.match(W);return Z&&q(Z[1])})}function Oc(V){if(V.match(L)||!V.match(/^-[^-]+/))return!1;let o=!0,A;const W=V.slice(1).split("");for(let Z=0;Z<W.length;Z++){if(A=V.slice(Z+2),!q(W[Z])){o=!1;break}if(W[Z+1]&&W[Z+1]==="="||A==="-"||/[A-Za-z]/.test(W[Z])&&/^-?\d+(\.\d*)?(e-?\d+)?$/.test(A)||W[Z+1]&&W[Z+1].match(/\W/))break}return o}function ol(V){return g["unknown-options-as-args"]&&Pc(V)}function Pc(V){return V=V.replace(/^-{3,}/,"--"),V.match(L)||Oc(V)?!1:!Ae(V,/^-+([^=]+?)=[\s\S]*$/,T,/^-+([^=]+?)$/,/^-+([^=]+?)-$/,/^-+([^=]+?\d+)$/,/^-+([^=]+?)\W+.*$/)}function Qe(V){return!F(V,a.bools)&&!F(V,a.counts)&&`${V}`in C?C[V]:vc(qc(V))}function vc(V){return{[ae.BOOLEAN]:!0,[ae.STRING]:"",[ae.NUMBER]:void 0,[ae.ARRAY]:[]}[V]}function qc(V){let o=ae.BOOLEAN;return F(V,a.strings)?o=ae.STRING:F(V,a.numbers)?o=ae.NUMBER:F(V,a.bools)?o=ae.BOOLEAN:F(V,a.arrays)&&(o=ae.ARRAY),o}function Je(V){return V===void 0}function $c(){Object.keys(a.counts).find(V=>F(V,a.arrays)?(M=Error(K("Invalid configuration: %s, opts.count excludes opts.array.",V)),!0):F(V,a.nargs)?(M=Error(K("Invalid configuration: %s, opts.count excludes opts.narg.",V)),!0):!1)}return{aliases:Object.assign({},a.aliases),argv:Object.assign(de,E),configuration:g,defaulted:Object.assign({},D),error:M,newAliases:Object.assign({},s)}}}function Kn(e){const l=[],t=Object.create(null);let c=!0;for(Object.keys(e).forEach(function(n){l.push([].concat(e[n],n))});c;){c=!1;for(let n=0;n<l.length;n++)for(let I=n+1;I<l.length;I++)if(l[n].filter(function(g){return l[I].indexOf(g)!==-1}).length){l[n]=l[n].concat(l[I]),l.splice(I,1),c=!0;break}}return l.forEach(function(n){n=n.filter(function(i,g,C){return C.indexOf(i)===g});const I=n.pop();I!==void 0&&typeof I=="string"&&(t[I]=n)}),t}function Ql(e){return e!==void 0?e+1:1}function Yt(e){return e==="__proto__"?"___proto___":e}function Hn(e){return typeof e=="string"&&(e[0]==="'"||e[0]==='"')&&e[e.length-1]===e[0]?e.substring(1,e.length-1):e}/**
 * @fileoverview Main entrypoint for libraries using yargs-parser in Node.js
 * CJS and ESM environments.
 *
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */var El,Kl,Hl;const ut=process&&process.env&&process.env.YARGS_MIN_NODE_VERSION?Number(process.env.YARGS_MIN_NODE_VERSION):12,kt=(Kl=(El=process==null?void 0:process.versions)===null||El===void 0?void 0:El.node)!==null&&Kl!==void 0?Kl:(Hl=process==null?void 0:process.version)===null||Hl===void 0?void 0:Hl.slice(1);if(kt&&Number(kt.match(/^([^.]+)/)[1])<ut)throw Error(`yargs parser supports a minimum Node.js version of ${ut}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`);const Mn=process?process.env:{},Yc=new En({cwd:process.cwd,env:()=>Mn,format:en.format,normalize:nl.normalize,resolve:nl.resolve,require:e=>{if(typeof require<"u")return require(e);if(e.match(/\.json$/))return JSON.parse(Vc.readFileSync(e,"utf8"));throw Error("only .json config files are supported in ESM")}}),Zl=function(l,t){return Yc.parse(l.slice(),t).argv};Zl.detailed=function(e,l){return Yc.parse(e.slice(),l)};Zl.camelCase=$e;Zl.decamelize=Uc;Zl.looksLikeNumber=Nc;const zn={exportToOo:"导出为......",exportWithPrevious:"使用上一次设置导出",exportSuccessNotice:P`导出文件 ${0} 成功！`,exportCommandOutputMessage:P`命令：${0}`,exportErrorOutputMessage:P`命令 ${0}，错误：${1}`,pleaseOpenFile:"请打开一个文件先。",preparing:P`正在生成 "${0}" ......`,exportDialog:{fileName:"文件名",type:"类型",exportTo:"导出到",title:P`导出为 ${0}`,export:"导出",selectExportFolder:"请选择导出文件夹",overwriteConfirmation:"覆盖提示"},messageBox:{yes:"是",no:"否",ok:"确认",cancel:"取消"},overwriteConfirmationDialog:{replace:"替换",title:P`"${0}" 已经存在。您要替换它吗？`,message:P`"${0}" 文件夹中已有相同的文件或文件夹，若替换，则会覆盖其当前内容。`},settingTab:{title:"导出设置",general:"通用",name:"名称",customLocation:"自定义",version:P`版本: ${0}`,pandocNotFound:"找不到 Pandoc，请填写 Pandoc 文件路径，或者将其添加到系统环境变量中。",pandocPath:"Pandoc 路径",defaultFolderForExportedFile:"默认的导出文件夹",openExportedFileLocation:"打开导出文件所在目录",sameFolderWithCurrentFile:"与原文件同一目录下",openExportedFile:"打开导出文件",pandocPathPlaceholder:"（自动检测）",editCommandTemplate:"编辑命令模板",chooseCommandTemplate:"选择模板",afterExport:"导出后",command:"命令",arguments:"参数",auto:"自动",reset:"重置",add:"添加",remove:"移除",rename:"重命名",targetFileExtensions:"目标文件扩展名",targetFileExtensionsTip:"（用空格分开）",showCommandOutput:"显示命令行输出",runCommand:"运行自定义命令",extraArguments:"自定义参数",save:"保存",new:"新建",template:"模板",advanced:"高级",environmentVariables:"环境变量",environmentVariablesDesc:"定义导出的环境变量."}},jn={exportToOo:"Export to...",exportSuccessNotice:P`Export file ${0} success!`,exportCommandOutputMessage:P`Command: ${0}`,exportErrorOutputMessage:P`Command: ${0}，Error:${1}`,exportWithPrevious:"Export with Previous",pleaseOpenFile:"Please open a file first.",preparing:P`generating "${0}"...`,exportDialog:{exportTo:"Export to",fileName:"File Name",title:P`Export to ${0}`,export:"Export",selectExportFolder:"Please select an export folder.",overwriteConfirmation:"Overwrite confirmation",type:"Type"},messageBox:{yes:"Yes",no:"No",ok:"Ok",cancel:"Cancel"},overwriteConfirmationDialog:{replace:"Replace",title:P`"${0}" already exists. Do you want to replace it?`,message:P`A file or folder with the same name already exists in the folder "${0}". Replacing it will overwrite its current contents.`},settingTab:{general:"General",name:"Name",title:"Export Settings",version:P`Version: ${0}`,pandocNotFound:"Pandoc not found, please fill in the Pandoc file path, or add it to the system environment variables.",defaultFolderForExportedFile:"Default Folder for Exported File",openExportedFileLocation:"Open exported file location",openExportedFile:"Open exported file",pandocPath:"Pandoc path",pandocPathPlaceholder:"(Auto Detect)",editCommandTemplate:"Edit Command Template",chooseCommandTemplate:"Choose template",customLocation:"Custom location",template:"Template",command:"Command",reset:"Reset",auto:"Auto",add:"Add",remove:"Remove",rename:"Rename",sameFolderWithCurrentFile:"Same folder with current file",afterExport:"After Export",targetFileExtensions:"Target file extensions",targetFileExtensionsTip:"(Separated by whitespace)",showCommandOutput:"Show command output",runCommand:"Run command",extraArguments:"Extra arguments",save:"Save",new:"New",arguments:"Arguments",advanced:"Advanced",environmentVariables:"Environment Variables",environmentVariablesDesc:"Define the Environment Variables for exporting."}},wn={exportToOo:"Export to...",exportSuccessNotice:P`Export der Datei ${0} erfolgreich!`,exportCommandOutputMessage:P`Command: ${0}`,exportErrorOutputMessage:P`Command: ${0}，Fehler:${1}`,exportWithPrevious:"Exportiere mit Vorherigem",pleaseOpenFile:"Bitte öffne zunächst eine Datei.",preparing:P`generating "${0}"...`,exportDialog:{exportTo:"Exportiere nach",fileName:"Dateiname",title:P`Export to ${0}`,export:"Export",selectExportFolder:"Zielordner auswählen",overwriteConfirmation:"Überschreibe den Zielordner",type:"Typ"},messageBox:{yes:"Ja",no:"Nein",ok:"Ok",cancel:"Abbrechen"},overwriteConfirmationDialog:{replace:"Ersetze",title:P`"${0}" existiert bereits. Soll er ersetzt werden?`,message:P`Eine Datei oder ein Ordner mit dem gleichen Namen existiert bereits im Ordner "${0}". Das Ersetzen wird die jetzigen Inhalte überschreiben.`},settingTab:{general:"Allgemein",name:"Name",title:"Export-Einstellungen",version:P`Version: ${0}`,pandocNotFound:"Pandoc.exe wurde nicht gefunden. Bitte geben Sie den Pfad zur Pandoc.exe ein oder fügen Sie ihn den Window Systemumgebungsvariablen hinzu.",defaultFolderForExportedFile:"Standardordner für exportierte Dateien",openExportedFileLocation:"Speicherort der exportierten Datei öffnen",openExportedFile:"Exportierte Datei öffnen",pandocPath:"Pfad zur Datei Pandoc.exe",pandocPathPlaceholder:"(Automatische Erkennung)",editCommandTemplate:"‘Befehlsvorlage bearbeiten",chooseCommandTemplate:"Vorlage auswählen",customLocation:"Benutzerdefinierter Speicherort",template:"Vorlage",command:"Befehl",reset:"Zurücksetzen",auto:"Auto",add:"Hinzufügen",remove:"Entfernen",rename:"Umbenennen",sameFolderWithCurrentFile:"Der gleiche Ordner mit der aktuellen Datei",afterExport:"Nach dem Export",targetFileExtensions:"Dateinamenserweiterung der Zieldatei",targetFileExtensionsTip:"(Mit Leerzeichen getrennt)",showCommandOutput:"Zeige die Ausgabe des Befehls",runCommand:"Starte den Befehl",extraArguments:"Zusätzliche Parameter",save:"Speichern",new:"Neu",arguments:"Parameter",advanced:"Advanced",environmentVariables:"Environment Variables",environmentVariablesDesc:"Define the Environment Variables for exporting."}},uc={"de-DE":wn,"en-US":jn,"zh-CN":zn,get current(){const e=Object.keys(this),l=We.moment.locale().toLowerCase();let t=e.find(n=>n.toLowerCase()===l.toLowerCase());if(t)return this[t];const c=l.split("-")[0];return t=e.find(n=>n.toLowerCase().startsWith(c)),t?this[t]:this["en-US"]}};class xt extends We.Modal{constructor(l,t,c){super(l),this.options=typeof t=="string"?{message:t,buttons:"Ok",title:c}:t,this.lang=uc.current}onOpen(){const{titleEl:l,contentEl:t,lang:c,options:{message:n,title:I,buttons:i,callback:g,buttonsLabel:C,buttonsClass:r}}=this;switch(I&&l.setText(I),t.createDiv({text:n}),i){case"Yes":t.createEl("div",{cls:["modal-button-container"],parent:t},d=>{d.createEl("button",{text:(C==null?void 0:C.yes)??c.messageBox.yes,cls:["mod-cta",r==null?void 0:r.yes],parent:d}).onclick=()=>this.call(g==null?void 0:g.yes)});break;case"YesNo":t.createEl("div",{cls:["modal-button-container"],parent:t},d=>{d.createEl("button",{text:(C==null?void 0:C.yes)??c.messageBox.yes,cls:["mod-cta",r==null?void 0:r.yes],parent:d}).onclick=()=>this.call(g==null?void 0:g.yes),d.createEl("button",{text:(C==null?void 0:C.no)??c.messageBox.no,cls:["mod-cta",r==null?void 0:r.no],parent:d}).onclick=()=>this.call(g==null?void 0:g.no)});break;case"Ok":t.createEl("div",{cls:["modal-button-container"],parent:t},d=>{d.createEl("button",{text:(C==null?void 0:C.ok)??c.messageBox.ok,cls:["mod-cta",r==null?void 0:r.no],parent:d}).onclick=()=>this.call(g==null?void 0:g.ok)});break;case"OkCancel":t.createEl("div",{cls:["modal-button-container"],parent:t},d=>{d.createEl("button",{text:(C==null?void 0:C.ok)??c.messageBox.ok,cls:["mod-cta",r==null?void 0:r.ok],parent:d}).onclick=()=>this.call(g==null?void 0:g.ok),d.createEl("button",{text:(C==null?void 0:C.cancel)??c.messageBox.cancel,cls:["mod-cta",r==null?void 0:r.cancel],parent:d}).onclick=()=>this.call(g==null?void 0:g.cancel)});break}}call(l){l&&l(),this.close()}onClose(){const{contentEl:l}=this;l.empty()}}async function kc(e,l,t,c,n,I,i,g,C,r){const{settings:d,lang:m,manifest:p,app:{vault:{adapter:s,config:D},loadProgress:K,fileManager:a}}=e;if(!c){const q=dc(n);c=`${l.basename}${q}`}I==null&&(I=d.showOverwriteConfirmation);const L=s.getBasePath(),T=`${L}/${p.dir}`,M=`${T}/lua`,O=t,E=`${O}/${c}`,de=c.substring(0,c.lastIndexOf(".")),h=c,B=s.getFullPath(l.path),R=B.substring(0,B.length-l.name.length-1),G=l.basename,Re=l.name;let j=D.attachmentFolderPath??"/";j==="/"?j=L:j.startsWith(".")&&(j=nl.join(R,j.substring(1)));const J=await new Promise(q=>{try{a.processFrontMatter(l,Ae=>(q(Ae),Ae))}catch(Ae){console.error(Ae),q(void 0)}}),b={pluginDir:T,luaDir:M,outputDir:O,outputPath:E,outputFileName:de,outputFileFullName:h,currentDir:R,currentPath:B,currentFileName:G,currentFileFullName:Re,attachmentFolderPath:j,vaultDir:L,metadata:J,options:i},x=n.type==="custom"&&n.showCommandOutput,u=n.openExportedFileLocation??d.openExportedFileLocation,k=n.openExportedFile??d.openExportedFile;if(I&&fl.existsSync(E)){const q=await fe.remote.dialog.showSaveDialog({title:m.overwriteConfirmationDialog.title(h),defaultPath:E,properties:["showOverwriteConfirmation","createDirectory"]});if(q.canceled)return;b.outputPath=q.filePath,b.outputDir=b.outputPath.substring(0,b.outputPath.lastIndexOf("/")),b.outputFileFullName=b.outputPath.substring(b.outputDir.length+1),b.outputFileName=b.outputFileFullName.substring(0,b.outputFileFullName.lastIndexOf("."))}K.setMessage(m.preparing(h)),r&&r(),K.show();const N=b.env=oc(oe(d.env)??{},b),f=oe(d.pandocPath)??"pandoc",z=n.type==="pandoc"?`${f} ${n.arguments??""} ${n.customArguments??""} "${B}"`:n.command,y=Zc(z,b),Q=Zl(y.match(/(?:[^\s"]+|"[^"]*")+/g),{alias:{output:["o"]}}),_=Q.output.startsWith('"')&&Q.output.endsWith('"')||Q.output.startsWith("'")&&Q.output.endsWith("'")?Q.output.substring(1,Q.output.length-1):Q.output,F=_.substring(0,_.lastIndexOf("/"));fl.existsSync(F)||fl.mkdirSync(F);try{console.log(`[${e.manifest.name}]: export command and options:`,{cmd:y,options:{cwd:b.currentDir,env:N}}),await ql(y,{cwd:b.currentDir,env:N}),K.hide();const q=async()=>{u&&setTimeout(()=>{fe.remote.shell.showItemInFolder(_)},1e3),k&&await fe.remote.shell.openPath(_),n.type==="pandoc"&&n.runCommand===!0&&n.command&&await ql(n.command),g&&g()};if(x){const Ae=new xt(app,m.exportCommandOutputMessage(y));Ae.onClose=q,Ae.open()}else new We.Notice(m.exportSuccessNotice(h),1500),await q()}catch(q){K.hide(),new xt(app,m.exportErrorOutputMessage(y,q)).open(),C&&C()}}const lt=e=>{const l=new We.Modal(e.app);let t=[],c=!1;return ue(()=>{Ve(l.titleEl,()=>e.title)}),ue(()=>{Ve(l.contentEl,()=>e.children)}),ue(()=>{const n=Object.entries(e.classList??{}).filter(([,I])=>I).map(([I])=>I);t.length>0&&l.containerEl.removeClasses(t),n.length>0&&l.containerEl.addClasses(n),t=n}),l.onClose=()=>{c||(c=!0,e.onClose())},Wc(()=>l.open()),Cl(()=>{c||l.close()}),document.createTextNode("")},Ln=me("<button>"),tt=e=>(()=>{const l=Ln();return Ct(l,"click",e.onClick,!0),Ve(l,()=>e.children),ne(()=>l.classList.toggle("mod-cta",!!e.cta)),l})();it(["click"]);const Dn=me('<div><div class="setting-item-info"><div class="setting-item-name"></div><div class="setting-item-description"></div></div><div class="setting-item-control">'),On=me('<div class="checkbox-container"><input type="checkbox">'),Pn=me('<div class="setting-editor-extra-setting-button">'),vn=me('<input type="text">'),qn=me("<textarea>"),$n=me('<select class="dropdown">'),_n=me("<option>"),xc=Cn(),eI=()=>Vn(xc),H=e=>{const l={settingEl:null};return X(xc.Provider,{value:l,get children(){const t=Dn(),c=t.firstChild,n=c.firstChild,I=n.nextSibling,i=c.nextSibling;return pc(g=>l.settingEl=g,t),Ve(n,()=>e.name),Ve(I,()=>e.description),Ve(i,()=>e.children),ne(g=>{const C=`setting-item ${e.class??""}`.trimEnd(),r=!!e.heading,d=!!e.disabled;return C!==g._v$&&Fc(t,g._v$=C),r!==g._v$2&&t.classList.toggle("setting-item-heading",g._v$2=r),d!==g._v$3&&t.classList.toggle("is-disable",g._v$3=d),g},{_v$:void 0,_v$2:void 0,_v$3:void 0}),t}})},Ge=e=>{const l=eI();return Wc(()=>{l.settingEl.addClass("mod-toggle")}),Cl(()=>{l.settingEl.removeClass("mod-toggle")}),(()=>{const t=On();return t.$$click=()=>e.onChange&&e.onChange(!e.checked),ne(()=>t.classList.toggle("is-enabled",!!e.checked)),t})()},xe=e=>(()=>{const l=Pn();return Ct(l,"click",e.onClick,!0),pc(t=>e.icon&&ln.setIcon(t,e.icon),l),ne(t=>{const c=!!(e.icon&&e.onClick),n=e.tooltip;return c!==t._v$4&&l.classList.toggle("clickable-icon",t._v$4=c),n!==t._v$5&&Ne(l,"aria-label",t._v$5=n),t},{_v$4:void 0,_v$5:void 0}),l})(),Ze=e=>(()=>{const l=vn();return l.addEventListener("change",t=>e.onChange&&e.onChange(t.target.value)),ne(t=>{const c=e.title,n=e.readOnly,I=e.placeholder,i=e.spellcheck??!1,g=e.style,C=e.disabled;return c!==t._v$6&&Ne(l,"title",t._v$6=c),n!==t._v$7&&(l.readOnly=t._v$7=n),I!==t._v$8&&Ne(l,"placeholder",t._v$8=I),i!==t._v$9&&Ne(l,"spellcheck",t._v$9=i),t._v$10=Vt(l,g,t._v$10),C!==t._v$11&&(l.disabled=t._v$11=C),t},{_v$6:void 0,_v$7:void 0,_v$8:void 0,_v$9:void 0,_v$10:void 0,_v$11:void 0}),ne(()=>l.value=e.value),l})(),lI=e=>(()=>{const l=qn();return l.addEventListener("change",t=>e.onChange&&e.onChange(t.target.value)),ne(t=>{const c=e.placeholder,n=e.spellcheck??!1,I=e.style,i=e.disabled;return c!==t._v$12&&Ne(l,"placeholder",t._v$12=c),n!==t._v$13&&Ne(l,"spellcheck",t._v$13=n),t._v$14=Vt(l,I,t._v$14),i!==t._v$15&&(l.disabled=t._v$15=i),t},{_v$12:void 0,_v$13:void 0,_v$14:void 0,_v$15:void 0}),ne(()=>l.value=e.value),l})(),tl=e=>(()=>{const l=$n();return l.addEventListener("change",t=>e.onChange&&e.onChange(t.target.value,t.target.selectedIndex)),l.autofocus=!0,Ve(l,X(Sc,{get each(){return e.options},children:t=>(()=>{const c=_n();return Ve(c,()=>t.name??t.value),ne(()=>c.selected=t.value===e.selected),ne(()=>c.value=t.value),c})()})),l})();it(["click"]);const tI=me("<div>Unsupported <!> "),sl={checkbox:e=>X(H,{get name(){return e.meta.title},get description(){return e.meta.description},get children(){return X(Ge,{get checked(){return _e(e.meta)},get onChange(){return e.onChange}})}}),textInput:e=>X(H,{get name(){return e.meta.title},get description(){return e.meta.description},get children(){return X(Ze,{get value(){return _e(e.meta)},get onChange(){return e.onChange}})}}),dropdown:e=>X(H,{get name(){return e.meta.title},get description(){return e.meta.description},get children(){return X(tl,{get selected(){return _e(e.meta)},get options(){return e.meta.options},onChange:l=>e.onChange(l)})}}),fileSelectDialog:e=>{const[l,t]=Ce(_e(e.meta)),c=async()=>{const n=await Cc.remote.dialog.showOpenDialog({properties:["openFile"],filters:e.meta.filters});!n.canceled&&n.filePaths.length>0&&(t(n.filePaths[0]),e.onChange&&e.onChange(v(l)))};return X(H,{get name(){return e.meta.title},get description(){return e.meta.description},get children(){return[X(Ze,{get value(){return l()??""},readOnly:!0}),X(xe,{icon:"folder",onClick:c})]}})}},cI=(e,l)=>{switch(e.type){case"checkbox":{const t=sl[e.type];return X(t,{meta:e,onChange:l})}case"dropdown":{const t=sl[e.type];return X(t,{meta:e,onChange:l})}case"textInput":{const t=sl[e.type];return X(t,{meta:e,onChange:l})}case"fileSelectDialog":{const t=sl[e.type];return X(t,{meta:e,onChange:l})}default:return(()=>{const t=tI(),c=t.firstChild,n=c.nextSibling;return n.nextSibling,Ve(t,()=>JSON.stringify(e),n),t})()}},nI=e=>{let l={};ue(()=>l=e.value??Bc(e.meta));const t=(n,I)=>{l[n]=I,e.onChange&&e.onChange(l,n)},c=(n,I)=>{const i=C=>t(n,C);let g;return e.customEditor&&(g=e.customEditor(I,i),g)?g:cI(I,i)};return X(Sc,{get each(){return Object.entries(e.meta)},children:([n,I])=>c(n,I)})},Bc=e=>Object.fromEntries(Object.entries(e).map(([l,t])=>[l,_e(t)])),_e=e=>{if(e.default)return e.default instanceof Function?e.default():e.default},II=me('<div class="modal-button-container">'),gI=e=>{var B;const{plugin:{app:l,settings:t,lang:c},currentFile:n}=e,[I,i]=Ce(!1),[g,C]=Ce(t.showOverwriteConfirmation),[r,d]=Ce(t.lastExportType??((B=t.items.first())==null?void 0:B.name)),[m,p]=Ce({}),s=ce(()=>t.items.find(R=>R.name===r())),D=ce(()=>dc(s())),K=ce(()=>c.exportDialog.title(s().name)),a=ce(()=>nn(s().optionsMeta)),[L,T]=Ce(`${oe(t.lastExportDirectory)??fe.remote.app.getPath("documents")}`),[M,O]=Ce(`${n.basename}${D()}`);ue(()=>{const R=a();p(R?Bc(R):{})}),ue(()=>{let R=v(M);R=R.includes(".")?R.substring(0,R.lastIndexOf(".")):R,O(`${R}${D()}`)});const E=t.items.map(R=>({name:R.name,value:R.name})),de=async()=>{var G;const R=await fe.remote.dialog.showOpenDialog({title:c.exportDialog.selectExportFolder,defaultPath:L(),properties:["createDirectory","openDirectory"]});!R.canceled&&((G=R.filePaths)==null?void 0:G.length)>0&&T(R.filePaths[0])},h=async()=>{const R=e.plugin;await kc(R,n,v(L),v(M),v(s),v(g),m(),async()=>{t.showOverwriteConfirmation=v(g),t.lastExportDirectory=Ye(t.lastExportDirectory,v(L)),t.lastExportType=v(s).name,await R.saveSettings(),e.onClose&&e.onClose()},()=>{i(!1)},()=>{i(!0)})};return X(lt,{app:l,get title(){return K()},get classList(){return{hidden:I()}},get onClose(){return e.onClose},get children(){return[X(H,{get name(){return c.exportDialog.type},get children(){return X(tl,{options:E,onChange:R=>d(R),get selected(){return r()}})}}),X(H,{get name(){return c.exportDialog.fileName},get children(){return X(Ze,{get title(){return M()},get value(){return M()},onChange:R=>O(R)})}}),X(rl,{get when(){return a()},get children(){return X(nI,{get meta(){return a()},get value(){return m()},onChange:R=>p(R)})}}),X(H,{get name(){return c.exportDialog.exportTo},get children(){return[X(Ze,{get title(){return L()},get value(){return L()},disabled:!0}),X(xe,{icon:"folder",onClick:de})]}}),X(H,{get name(){return c.exportDialog.overwriteConfirmation},class:"mod-toggle",get children(){return X(Ge,{get checked(){return g()},onChange:C})}}),(()=>{const R=II();return Ve(R,X(tt,{cta:!0,onClick:h,get children(){return c.exportDialog.export}})),R})()]}})},iI=(e,l)=>ll(t=>{let c=!1;const n=()=>{c||(c=!0,t())},I=Ve(document.body,()=>X(gI,{onClose:n,plugin:e,currentFile:l}));return Cl(()=>{I instanceof Node&&document.body.contains(I)&&document.body.removeChild(I)}),n}),Ml={show:iI},Fl=Symbol("store-raw"),gl=Symbol("store-node");function yc(e){let l=e[he];if(!l&&(Object.defineProperty(e,he,{value:l=new Proxy(e,ZI)}),!Array.isArray(e))){const t=Object.keys(e),c=Object.getOwnPropertyDescriptors(e);for(let n=0,I=t.length;n<I;n++){const i=t[n];c[i].get&&Object.defineProperty(e,i,{enumerable:c[i].enumerable,get:c[i].get.bind(l)})}}return l}function je(e){let l;return e!=null&&typeof e=="object"&&(e[he]||!(l=Object.getPrototypeOf(e))||l===Object.prototype||Array.isArray(e))}function we(e,l=new Set){let t,c,n,I;if(t=e!=null&&e[Fl])return t;if(!je(e)||l.has(e))return e;if(Array.isArray(e)){Object.isFrozen(e)?e=e.slice(0):l.add(e);for(let i=0,g=e.length;i<g;i++)n=e[i],(c=we(n,l))!==n&&(e[i]=c)}else{Object.isFrozen(e)?e=Object.assign({},e):l.add(e);const i=Object.keys(e),g=Object.getOwnPropertyDescriptors(e);for(let C=0,r=i.length;C<r;C++)I=i[C],!g[I].get&&(n=e[I],(c=we(n,l))!==n&&(e[I]=c))}return e}function Zt(e){let l=e[gl];return l||Object.defineProperty(e,gl,{value:l=Object.create(null)}),l}function ct(e,l,t){return e[l]||(e[l]=Tc(t))}function CI(e,l){const t=Reflect.getOwnPropertyDescriptor(e,l);return!t||t.get||!t.configurable||l===he||l===gl||(delete t.value,delete t.writable,t.get=()=>e[he][l]),t}function fc(e){if(mc()){const l=Zt(e);(l._||(l._=Tc()))()}}function VI(e){return fc(e),Reflect.ownKeys(e)}function Tc(e){const[l,t]=Ce(e,{equals:!1,internal:!0});return l.$=t,l}const ZI={get(e,l,t){if(l===Fl)return e;if(l===he)return t;if(l===$l)return fc(e),t;const c=Zt(e),n=c[l];let I=n?n():e[l];if(l===gl||l==="__proto__")return I;if(!n){const i=Object.getOwnPropertyDescriptor(e,l);mc()&&(typeof I!="function"||e.hasOwnProperty(l))&&!(i&&i.get)&&(I=ct(c,l,I)())}return je(I)?yc(I):I},has(e,l){return l===Fl||l===he||l===$l||l===gl||l==="__proto__"?!0:(this.get(e,l,e),l in e)},set(){return!0},deleteProperty(){return!0},ownKeys:VI,getOwnPropertyDescriptor:CI};function Le(e,l,t,c=!1){if(!c&&e[l]===t)return;const n=e[l],I=e.length;t===void 0?delete e[l]:e[l]=t;let i=Zt(e),g;if((g=ct(i,l,n))&&g.$(()=>t),Array.isArray(e)&&e.length!==I){for(let C=e.length;C<I;C++)(g=i[C])&&g.$();(g=ct(i,"length",I))&&g.$(e.length)}(g=i._)&&g.$()}function Qc(e,l){const t=Object.keys(l);for(let c=0;c<t.length;c+=1){const n=t[c];Le(e,n,l[n])}}function dI(e,l){if(typeof l=="function"&&(l=l(e)),l=we(l),Array.isArray(l)){if(e===l)return;let t=0,c=l.length;for(;t<c;t++){const n=l[t];e[t]!==n&&Le(e,t,n)}Le(e,"length",c)}else Qc(e,l)}function el(e,l,t=[]){let c,n=e;if(l.length>1){c=l.shift();const i=typeof c,g=Array.isArray(e);if(Array.isArray(c)){for(let C=0;C<c.length;C++)el(e,[c[C]].concat(l),t);return}else if(g&&i==="function"){for(let C=0;C<e.length;C++)c(e[C],C)&&el(e,[C].concat(l),t);return}else if(g&&i==="object"){const{from:C=0,to:r=e.length-1,by:d=1}=c;for(let m=C;m<=r;m+=d)el(e,[m].concat(l),t);return}else if(l.length>1){el(e[c],l,[c].concat(t));return}n=e[c],t=[c].concat(t)}let I=l[0];typeof I=="function"&&(I=I(n,t),I===n)||c===void 0&&I==null||(I=we(I),c===void 0||je(n)&&je(I)&&!Array.isArray(I)?Qc(n,I):Le(e,c,I))}function oI(...[e,l]){const t=we(e||{}),c=Array.isArray(t),n=yc(t);function I(...i){Al(()=>{c&&i.length===1?dI(t,i[0]):el(t,i)})}return[n,I]}const pl=new WeakMap,Ec={get(e,l){if(l===Fl)return e;const t=e[l];let c;return je(t)?pl.get(t)||(pl.set(t,c=new Proxy(t,Ec)),c):t},set(e,l,t){return Le(e,l,we(t)),!0},deleteProperty(e,l){return Le(e,l,void 0,!0),!0}};function aI(e){return l=>{if(je(l)){let t;(t=pl.get(l))||pl.set(l,t=new Proxy(l,Ec)),e(t)}return l}}function sI(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var nt={exports:{}};const WI="2.0.0",Kc=256,mI=Number.MAX_SAFE_INTEGER||9007199254740991,XI=16,bI=Kc-6,RI=["major","premajor","minor","preminor","patch","prepatch","prerelease"];var ul={MAX_LENGTH:Kc,MAX_SAFE_COMPONENT_LENGTH:XI,MAX_SAFE_BUILD_LENGTH:bI,MAX_SAFE_INTEGER:mI,RELEASE_TYPES:RI,SEMVER_SPEC_VERSION:WI,FLAG_INCLUDE_PRERELEASE:1,FLAG_LOOSE:2};const AI=typeof process=="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};var kl=AI;(function(e,l){const{MAX_SAFE_COMPONENT_LENGTH:t,MAX_SAFE_BUILD_LENGTH:c}=ul,n=kl;l=e.exports={};const I=l.re=[],i=l.safeRe=[],g=l.src=[],C=l.t={};let r=0;const d="[a-zA-Z0-9-]",m=[["\\s",1],["\\d",t],[d,c]],p=D=>{for(const[K,a]of m)D=D.split(`${K}*`).join(`${K}{0,${a}}`).split(`${K}+`).join(`${K}{1,${a}}`);return D},s=(D,K,a)=>{const L=p(K),T=r++;n(D,T,K),C[D]=T,g[T]=K,I[T]=new RegExp(K,a?"g":void 0),i[T]=new RegExp(L,a?"g":void 0)};s("NUMERICIDENTIFIER","0|[1-9]\\d*"),s("NUMERICIDENTIFIERLOOSE","\\d+"),s("NONNUMERICIDENTIFIER",`\\d*[a-zA-Z-]${d}*`),s("MAINVERSION",`(${g[C.NUMERICIDENTIFIER]})\\.(${g[C.NUMERICIDENTIFIER]})\\.(${g[C.NUMERICIDENTIFIER]})`),s("MAINVERSIONLOOSE",`(${g[C.NUMERICIDENTIFIERLOOSE]})\\.(${g[C.NUMERICIDENTIFIERLOOSE]})\\.(${g[C.NUMERICIDENTIFIERLOOSE]})`),s("PRERELEASEIDENTIFIER",`(?:${g[C.NUMERICIDENTIFIER]}|${g[C.NONNUMERICIDENTIFIER]})`),s("PRERELEASEIDENTIFIERLOOSE",`(?:${g[C.NUMERICIDENTIFIERLOOSE]}|${g[C.NONNUMERICIDENTIFIER]})`),s("PRERELEASE",`(?:-(${g[C.PRERELEASEIDENTIFIER]}(?:\\.${g[C.PRERELEASEIDENTIFIER]})*))`),s("PRERELEASELOOSE",`(?:-?(${g[C.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${g[C.PRERELEASEIDENTIFIERLOOSE]})*))`),s("BUILDIDENTIFIER",`${d}+`),s("BUILD",`(?:\\+(${g[C.BUILDIDENTIFIER]}(?:\\.${g[C.BUILDIDENTIFIER]})*))`),s("FULLPLAIN",`v?${g[C.MAINVERSION]}${g[C.PRERELEASE]}?${g[C.BUILD]}?`),s("FULL",`^${g[C.FULLPLAIN]}$`),s("LOOSEPLAIN",`[v=\\s]*${g[C.MAINVERSIONLOOSE]}${g[C.PRERELEASELOOSE]}?${g[C.BUILD]}?`),s("LOOSE",`^${g[C.LOOSEPLAIN]}$`),s("GTLT","((?:<|>)?=?)"),s("XRANGEIDENTIFIERLOOSE",`${g[C.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),s("XRANGEIDENTIFIER",`${g[C.NUMERICIDENTIFIER]}|x|X|\\*`),s("XRANGEPLAIN",`[v=\\s]*(${g[C.XRANGEIDENTIFIER]})(?:\\.(${g[C.XRANGEIDENTIFIER]})(?:\\.(${g[C.XRANGEIDENTIFIER]})(?:${g[C.PRERELEASE]})?${g[C.BUILD]}?)?)?`),s("XRANGEPLAINLOOSE",`[v=\\s]*(${g[C.XRANGEIDENTIFIERLOOSE]})(?:\\.(${g[C.XRANGEIDENTIFIERLOOSE]})(?:\\.(${g[C.XRANGEIDENTIFIERLOOSE]})(?:${g[C.PRERELEASELOOSE]})?${g[C.BUILD]}?)?)?`),s("XRANGE",`^${g[C.GTLT]}\\s*${g[C.XRANGEPLAIN]}$`),s("XRANGELOOSE",`^${g[C.GTLT]}\\s*${g[C.XRANGEPLAINLOOSE]}$`),s("COERCE",`(^|[^\\d])(\\d{1,${t}})(?:\\.(\\d{1,${t}}))?(?:\\.(\\d{1,${t}}))?(?:$|[^\\d])`),s("COERCERTL",g[C.COERCE],!0),s("LONETILDE","(?:~>?)"),s("TILDETRIM",`(\\s*)${g[C.LONETILDE]}\\s+`,!0),l.tildeTrimReplace="$1~",s("TILDE",`^${g[C.LONETILDE]}${g[C.XRANGEPLAIN]}$`),s("TILDELOOSE",`^${g[C.LONETILDE]}${g[C.XRANGEPLAINLOOSE]}$`),s("LONECARET","(?:\\^)"),s("CARETTRIM",`(\\s*)${g[C.LONECARET]}\\s+`,!0),l.caretTrimReplace="$1^",s("CARET",`^${g[C.LONECARET]}${g[C.XRANGEPLAIN]}$`),s("CARETLOOSE",`^${g[C.LONECARET]}${g[C.XRANGEPLAINLOOSE]}$`),s("COMPARATORLOOSE",`^${g[C.GTLT]}\\s*(${g[C.LOOSEPLAIN]})$|^$`),s("COMPARATOR",`^${g[C.GTLT]}\\s*(${g[C.FULLPLAIN]})$|^$`),s("COMPARATORTRIM",`(\\s*)${g[C.GTLT]}\\s*(${g[C.LOOSEPLAIN]}|${g[C.XRANGEPLAIN]})`,!0),l.comparatorTrimReplace="$1$2$3",s("HYPHENRANGE",`^\\s*(${g[C.XRANGEPLAIN]})\\s+-\\s+(${g[C.XRANGEPLAIN]})\\s*$`),s("HYPHENRANGELOOSE",`^\\s*(${g[C.XRANGEPLAINLOOSE]})\\s+-\\s+(${g[C.XRANGEPLAINLOOSE]})\\s*$`),s("STAR","(<|>)?=?\\s*\\*"),s("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),s("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")})(nt,nt.exports);var dl=nt.exports;const rI=Object.freeze({loose:!0}),GI=Object.freeze({}),hI=e=>e?typeof e!="object"?rI:e:GI;var dt=hI;const Bt=/^[0-9]+$/,Hc=(e,l)=>{const t=Bt.test(e),c=Bt.test(l);return t&&c&&(e=+e,l=+l),e===l?0:t&&!c?-1:c&&!t?1:e<l?-1:1},JI=(e,l)=>Hc(l,e);var Mc={compareIdentifiers:Hc,rcompareIdentifiers:JI};const Wl=kl,{MAX_LENGTH:yt,MAX_SAFE_INTEGER:ml}=ul,{safeRe:ft,t:Tt}=dl,SI=dt,{compareIdentifiers:Ke}=Mc;let FI=class re{constructor(l,t){if(t=SI(t),l instanceof re){if(l.loose===!!t.loose&&l.includePrerelease===!!t.includePrerelease)return l;l=l.version}else if(typeof l!="string")throw new TypeError(`Invalid version. Must be a string. Got type "${typeof l}".`);if(l.length>yt)throw new TypeError(`version is longer than ${yt} characters`);Wl("SemVer",l,t),this.options=t,this.loose=!!t.loose,this.includePrerelease=!!t.includePrerelease;const c=l.trim().match(t.loose?ft[Tt.LOOSE]:ft[Tt.FULL]);if(!c)throw new TypeError(`Invalid Version: ${l}`);if(this.raw=l,this.major=+c[1],this.minor=+c[2],this.patch=+c[3],this.major>ml||this.major<0)throw new TypeError("Invalid major version");if(this.minor>ml||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>ml||this.patch<0)throw new TypeError("Invalid patch version");c[4]?this.prerelease=c[4].split(".").map(n=>{if(/^[0-9]+$/.test(n)){const I=+n;if(I>=0&&I<ml)return I}return n}):this.prerelease=[],this.build=c[5]?c[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(l){if(Wl("SemVer.compare",this.version,this.options,l),!(l instanceof re)){if(typeof l=="string"&&l===this.version)return 0;l=new re(l,this.options)}return l.version===this.version?0:this.compareMain(l)||this.comparePre(l)}compareMain(l){return l instanceof re||(l=new re(l,this.options)),Ke(this.major,l.major)||Ke(this.minor,l.minor)||Ke(this.patch,l.patch)}comparePre(l){if(l instanceof re||(l=new re(l,this.options)),this.prerelease.length&&!l.prerelease.length)return-1;if(!this.prerelease.length&&l.prerelease.length)return 1;if(!this.prerelease.length&&!l.prerelease.length)return 0;let t=0;do{const c=this.prerelease[t],n=l.prerelease[t];if(Wl("prerelease compare",t,c,n),c===void 0&&n===void 0)return 0;if(n===void 0)return 1;if(c===void 0)return-1;if(c===n)continue;return Ke(c,n)}while(++t)}compareBuild(l){l instanceof re||(l=new re(l,this.options));let t=0;do{const c=this.build[t],n=l.build[t];if(Wl("prerelease compare",t,c,n),c===void 0&&n===void 0)return 0;if(n===void 0)return 1;if(c===void 0)return-1;if(c===n)continue;return Ke(c,n)}while(++t)}inc(l,t,c){switch(l){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",t,c);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",t,c);break;case"prepatch":this.prerelease.length=0,this.inc("patch",t,c),this.inc("pre",t,c);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",t,c),this.inc("pre",t,c);break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":{const n=Number(c)?1:0;if(!t&&c===!1)throw new Error("invalid increment argument: identifier is empty");if(this.prerelease.length===0)this.prerelease=[n];else{let I=this.prerelease.length;for(;--I>=0;)typeof this.prerelease[I]=="number"&&(this.prerelease[I]++,I=-2);if(I===-1){if(t===this.prerelease.join(".")&&c===!1)throw new Error("invalid increment argument: identifier already exists");this.prerelease.push(n)}}if(t){let I=[t,n];c===!1&&(I=[t]),Ke(this.prerelease[0],t)===0?isNaN(this.prerelease[1])&&(this.prerelease=I):this.prerelease=I}break}default:throw new Error(`invalid increment argument: ${l}`)}return this.raw=this.format(),this.build.length&&(this.raw+=`+${this.build.join(".")}`),this}};var ie=FI;const Qt=ie,pI=(e,l,t=!1)=>{if(e instanceof Qt)return e;try{return new Qt(e,l)}catch(c){if(!t)return null;throw c}};var Oe=pI;const UI=Oe,NI=(e,l)=>{const t=UI(e,l);return t?t.version:null};var YI=NI;const uI=Oe,kI=(e,l)=>{const t=uI(e.trim().replace(/^[=v]+/,""),l);return t?t.version:null};var xI=kI;const Et=ie,BI=(e,l,t,c,n)=>{typeof t=="string"&&(n=c,c=t,t=void 0);try{return new Et(e instanceof Et?e.version:e,t).inc(l,c,n).version}catch{return null}};var yI=BI;const Kt=Oe,fI=(e,l)=>{const t=Kt(e,null,!0),c=Kt(l,null,!0),n=t.compare(c);if(n===0)return null;const I=n>0,i=I?t:c,g=I?c:t,C=!!i.prerelease.length;if(!!g.prerelease.length&&!C)return!g.patch&&!g.minor?"major":i.patch?"patch":i.minor?"minor":"major";const d=C?"pre":"";return t.major!==c.major?d+"major":t.minor!==c.minor?d+"minor":t.patch!==c.patch?d+"patch":"prerelease"};var TI=fI;const QI=ie,EI=(e,l)=>new QI(e,l).major;var KI=EI;const HI=ie,MI=(e,l)=>new HI(e,l).minor;var zI=MI;const jI=ie,wI=(e,l)=>new jI(e,l).patch;var LI=wI;const DI=Oe,OI=(e,l)=>{const t=DI(e,l);return t&&t.prerelease.length?t.prerelease:null};var PI=OI;const Ht=ie,vI=(e,l,t)=>new Ht(e,t).compare(new Ht(l,t));var Xe=vI;const qI=Xe,$I=(e,l,t)=>qI(l,e,t);var _I=$I;const eg=Xe,lg=(e,l)=>eg(e,l,!0);var tg=lg;const Mt=ie,cg=(e,l,t)=>{const c=new Mt(e,t),n=new Mt(l,t);return c.compare(n)||c.compareBuild(n)};var ot=cg;const ng=ot,Ig=(e,l)=>e.sort((t,c)=>ng(t,c,l));var gg=Ig;const ig=ot,Cg=(e,l)=>e.sort((t,c)=>ig(c,t,l));var Vg=Cg;const Zg=Xe,dg=(e,l,t)=>Zg(e,l,t)>0;var xl=dg;const og=Xe,ag=(e,l,t)=>og(e,l,t)<0;var at=ag;const sg=Xe,Wg=(e,l,t)=>sg(e,l,t)===0;var zc=Wg;const mg=Xe,Xg=(e,l,t)=>mg(e,l,t)!==0;var jc=Xg;const bg=Xe,Rg=(e,l,t)=>bg(e,l,t)>=0;var st=Rg;const Ag=Xe,rg=(e,l,t)=>Ag(e,l,t)<=0;var Wt=rg;const Gg=zc,hg=jc,Jg=xl,Sg=st,Fg=at,pg=Wt,Ug=(e,l,t,c)=>{switch(l){case"===":return typeof e=="object"&&(e=e.version),typeof t=="object"&&(t=t.version),e===t;case"!==":return typeof e=="object"&&(e=e.version),typeof t=="object"&&(t=t.version),e!==t;case"":case"=":case"==":return Gg(e,t,c);case"!=":return hg(e,t,c);case">":return Jg(e,t,c);case">=":return Sg(e,t,c);case"<":return Fg(e,t,c);case"<=":return pg(e,t,c);default:throw new TypeError(`Invalid operator: ${l}`)}};var wc=Ug;const Ng=ie,Yg=Oe,{safeRe:Xl,t:bl}=dl,ug=(e,l)=>{if(e instanceof Ng)return e;if(typeof e=="number"&&(e=String(e)),typeof e!="string")return null;l=l||{};let t=null;if(!l.rtl)t=e.match(Xl[bl.COERCE]);else{let c;for(;(c=Xl[bl.COERCERTL].exec(e))&&(!t||t.index+t[0].length!==e.length);)(!t||c.index+c[0].length!==t.index+t[0].length)&&(t=c),Xl[bl.COERCERTL].lastIndex=c.index+c[1].length+c[2].length;Xl[bl.COERCERTL].lastIndex=-1}return t===null?null:Yg(`${t[2]}.${t[3]||"0"}.${t[4]||"0"}`,l)};var kg=ug,zl,zt;function xg(){return zt||(zt=1,zl=function(e){e.prototype[Symbol.iterator]=function*(){for(let l=this.head;l;l=l.next)yield l.value}}),zl}var Bg=w;w.Node=Te;w.create=w;function w(e){var l=this;if(l instanceof w||(l=new w),l.tail=null,l.head=null,l.length=0,e&&typeof e.forEach=="function")e.forEach(function(n){l.push(n)});else if(arguments.length>0)for(var t=0,c=arguments.length;t<c;t++)l.push(arguments[t]);return l}w.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var l=e.next,t=e.prev;return l&&(l.prev=t),t&&(t.next=l),e===this.head&&(this.head=l),e===this.tail&&(this.tail=t),e.list.length--,e.next=null,e.prev=null,e.list=null,l};w.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var l=this.head;e.list=this,e.next=l,l&&(l.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}};w.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var l=this.tail;e.list=this,e.prev=l,l&&(l.next=e),this.tail=e,this.head||(this.head=e),this.length++}};w.prototype.push=function(){for(var e=0,l=arguments.length;e<l;e++)fg(this,arguments[e]);return this.length};w.prototype.unshift=function(){for(var e=0,l=arguments.length;e<l;e++)Tg(this,arguments[e]);return this.length};w.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}};w.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}};w.prototype.forEach=function(e,l){l=l||this;for(var t=this.head,c=0;t!==null;c++)e.call(l,t.value,c,this),t=t.next};w.prototype.forEachReverse=function(e,l){l=l||this;for(var t=this.tail,c=this.length-1;t!==null;c--)e.call(l,t.value,c,this),t=t.prev};w.prototype.get=function(e){for(var l=0,t=this.head;t!==null&&l<e;l++)t=t.next;if(l===e&&t!==null)return t.value};w.prototype.getReverse=function(e){for(var l=0,t=this.tail;t!==null&&l<e;l++)t=t.prev;if(l===e&&t!==null)return t.value};w.prototype.map=function(e,l){l=l||this;for(var t=new w,c=this.head;c!==null;)t.push(e.call(l,c.value,this)),c=c.next;return t};w.prototype.mapReverse=function(e,l){l=l||this;for(var t=new w,c=this.tail;c!==null;)t.push(e.call(l,c.value,this)),c=c.prev;return t};w.prototype.reduce=function(e,l){var t,c=this.head;if(arguments.length>1)t=l;else if(this.head)c=this.head.next,t=this.head.value;else throw new TypeError("Reduce of empty list with no initial value");for(var n=0;c!==null;n++)t=e(t,c.value,n),c=c.next;return t};w.prototype.reduceReverse=function(e,l){var t,c=this.tail;if(arguments.length>1)t=l;else if(this.tail)c=this.tail.prev,t=this.tail.value;else throw new TypeError("Reduce of empty list with no initial value");for(var n=this.length-1;c!==null;n--)t=e(t,c.value,n),c=c.prev;return t};w.prototype.toArray=function(){for(var e=new Array(this.length),l=0,t=this.head;t!==null;l++)e[l]=t.value,t=t.next;return e};w.prototype.toArrayReverse=function(){for(var e=new Array(this.length),l=0,t=this.tail;t!==null;l++)e[l]=t.value,t=t.prev;return e};w.prototype.slice=function(e,l){l=l||this.length,l<0&&(l+=this.length),e=e||0,e<0&&(e+=this.length);var t=new w;if(l<e||l<0)return t;e<0&&(e=0),l>this.length&&(l=this.length);for(var c=0,n=this.head;n!==null&&c<e;c++)n=n.next;for(;n!==null&&c<l;c++,n=n.next)t.push(n.value);return t};w.prototype.sliceReverse=function(e,l){l=l||this.length,l<0&&(l+=this.length),e=e||0,e<0&&(e+=this.length);var t=new w;if(l<e||l<0)return t;e<0&&(e=0),l>this.length&&(l=this.length);for(var c=this.length,n=this.tail;n!==null&&c>l;c--)n=n.prev;for(;n!==null&&c>e;c--,n=n.prev)t.push(n.value);return t};w.prototype.splice=function(e,l,...t){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var c=0,n=this.head;n!==null&&c<e;c++)n=n.next;for(var I=[],c=0;n&&c<l;c++)I.push(n.value),n=this.removeNode(n);n===null&&(n=this.tail),n!==this.head&&n!==this.tail&&(n=n.prev);for(var c=0;c<t.length;c++)n=yg(this,n,t[c]);return I};w.prototype.reverse=function(){for(var e=this.head,l=this.tail,t=e;t!==null;t=t.prev){var c=t.prev;t.prev=t.next,t.next=c}return this.head=l,this.tail=e,this};function yg(e,l,t){var c=l===e.head?new Te(t,null,l,e):new Te(t,l,l.next,e);return c.next===null&&(e.tail=c),c.prev===null&&(e.head=c),e.length++,c}function fg(e,l){e.tail=new Te(l,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function Tg(e,l){e.head=new Te(l,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function Te(e,l,t,c){if(!(this instanceof Te))return new Te(e,l,t,c);this.list=c,this.value=e,l?(l.next=this,this.prev=l):this.prev=null,t?(t.prev=this,this.next=t):this.next=null}try{xg()(w)}catch{}const Qg=Bg,Be=Symbol("max"),pe=Symbol("length"),He=Symbol("lengthCalculator"),cl=Symbol("allowStale"),ye=Symbol("maxAge"),Fe=Symbol("dispose"),jt=Symbol("noDisposeOnSet"),te=Symbol("lruList"),se=Symbol("cache"),Lc=Symbol("updateAgeOnGet"),jl=()=>1;class Eg{constructor(l){if(typeof l=="number"&&(l={max:l}),l||(l={}),l.max&&(typeof l.max!="number"||l.max<0))throw new TypeError("max must be a non-negative number");this[Be]=l.max||1/0;const t=l.length||jl;if(this[He]=typeof t!="function"?jl:t,this[cl]=l.stale||!1,l.maxAge&&typeof l.maxAge!="number")throw new TypeError("maxAge must be a number");this[ye]=l.maxAge||0,this[Fe]=l.dispose,this[jt]=l.noDisposeOnSet||!1,this[Lc]=l.updateAgeOnGet||!1,this.reset()}set max(l){if(typeof l!="number"||l<0)throw new TypeError("max must be a non-negative number");this[Be]=l||1/0,ve(this)}get max(){return this[Be]}set allowStale(l){this[cl]=!!l}get allowStale(){return this[cl]}set maxAge(l){if(typeof l!="number")throw new TypeError("maxAge must be a non-negative number");this[ye]=l,ve(this)}get maxAge(){return this[ye]}set lengthCalculator(l){typeof l!="function"&&(l=jl),l!==this[He]&&(this[He]=l,this[pe]=0,this[te].forEach(t=>{t.length=this[He](t.value,t.key),this[pe]+=t.length})),ve(this)}get lengthCalculator(){return this[He]}get length(){return this[pe]}get itemCount(){return this[te].length}rforEach(l,t){t=t||this;for(let c=this[te].tail;c!==null;){const n=c.prev;wt(this,l,c,t),c=n}}forEach(l,t){t=t||this;for(let c=this[te].head;c!==null;){const n=c.next;wt(this,l,c,t),c=n}}keys(){return this[te].toArray().map(l=>l.key)}values(){return this[te].toArray().map(l=>l.value)}reset(){this[Fe]&&this[te]&&this[te].length&&this[te].forEach(l=>this[Fe](l.key,l.value)),this[se]=new Map,this[te]=new Qg,this[pe]=0}dump(){return this[te].map(l=>Ul(this,l)?!1:{k:l.key,v:l.value,e:l.now+(l.maxAge||0)}).toArray().filter(l=>l)}dumpLru(){return this[te]}set(l,t,c){if(c=c||this[ye],c&&typeof c!="number")throw new TypeError("maxAge must be a number");const n=c?Date.now():0,I=this[He](t,l);if(this[se].has(l)){if(I>this[Be])return Me(this,this[se].get(l)),!1;const C=this[se].get(l).value;return this[Fe]&&(this[jt]||this[Fe](l,C.value)),C.now=n,C.maxAge=c,C.value=t,this[pe]+=I-C.length,C.length=I,this.get(l),ve(this),!0}const i=new Kg(l,t,I,n,c);return i.length>this[Be]?(this[Fe]&&this[Fe](l,t),!1):(this[pe]+=i.length,this[te].unshift(i),this[se].set(l,this[te].head),ve(this),!0)}has(l){if(!this[se].has(l))return!1;const t=this[se].get(l).value;return!Ul(this,t)}get(l){return wl(this,l,!0)}peek(l){return wl(this,l,!1)}pop(){const l=this[te].tail;return l?(Me(this,l),l.value):null}del(l){Me(this,this[se].get(l))}load(l){this.reset();const t=Date.now();for(let c=l.length-1;c>=0;c--){const n=l[c],I=n.e||0;if(I===0)this.set(n.k,n.v);else{const i=I-t;i>0&&this.set(n.k,n.v,i)}}}prune(){this[se].forEach((l,t)=>wl(this,t,!1))}}const wl=(e,l,t)=>{const c=e[se].get(l);if(c){const n=c.value;if(Ul(e,n)){if(Me(e,c),!e[cl])return}else t&&(e[Lc]&&(c.value.now=Date.now()),e[te].unshiftNode(c));return n.value}},Ul=(e,l)=>{if(!l||!l.maxAge&&!e[ye])return!1;const t=Date.now()-l.now;return l.maxAge?t>l.maxAge:e[ye]&&t>e[ye]},ve=e=>{if(e[pe]>e[Be])for(let l=e[te].tail;e[pe]>e[Be]&&l!==null;){const t=l.prev;Me(e,l),l=t}},Me=(e,l)=>{if(l){const t=l.value;e[Fe]&&e[Fe](t.key,t.value),e[pe]-=t.length,e[se].delete(t.key),e[te].removeNode(l)}};class Kg{constructor(l,t,c,n,I){this.key=l,this.value=t,this.length=c,this.now=n,this.maxAge=I||0}}const wt=(e,l,t,c)=>{let n=t.value;Ul(e,n)&&(Me(e,t),e[cl]||(n=void 0)),n&&l.call(c,n.value,n.key,e)};var Hg=Eg,Ll,Lt;function be(){if(Lt)return Ll;Lt=1;class e{constructor(b,x){if(x=c(x),b instanceof e)return b.loose===!!x.loose&&b.includePrerelease===!!x.includePrerelease?b:new e(b.raw,x);if(b instanceof n)return this.raw=b.value,this.set=[[b]],this.format(),this;if(this.options=x,this.loose=!!x.loose,this.includePrerelease=!!x.includePrerelease,this.raw=b.trim().split(/\s+/).join(" "),this.set=this.raw.split("||").map(u=>this.parseRange(u)).filter(u=>u.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${this.raw}`);if(this.set.length>1){const u=this.set[0];if(this.set=this.set.filter(k=>!D(k[0])),this.set.length===0)this.set=[u];else if(this.set.length>1){for(const k of this.set)if(k.length===1&&K(k[0])){this.set=[k];break}}}this.format()}format(){return this.range=this.set.map(b=>b.join(" ").trim()).join("||").trim(),this.range}toString(){return this.range}parseRange(b){const u=((this.options.includePrerelease&&p)|(this.options.loose&&s))+":"+b,k=t.get(u);if(k)return k;const N=this.options.loose,f=N?g[C.HYPHENRANGELOOSE]:g[C.HYPHENRANGE];b=b.replace(f,Re(this.options.includePrerelease)),I("hyphen replace",b),b=b.replace(g[C.COMPARATORTRIM],r),I("comparator trim",b),b=b.replace(g[C.TILDETRIM],d),I("tilde trim",b),b=b.replace(g[C.CARETTRIM],m),I("caret trim",b);let z=b.split(" ").map(F=>L(F,this.options)).join(" ").split(/\s+/).map(F=>G(F,this.options));N&&(z=z.filter(F=>(I("loose invalid filter",F,this.options),!!F.match(g[C.COMPARATORLOOSE])))),I("range list",z);const y=new Map,Q=z.map(F=>new n(F,this.options));for(const F of Q){if(D(F))return[F];y.set(F.value,F)}y.size>1&&y.has("")&&y.delete("");const _=[...y.values()];return t.set(u,_),_}intersects(b,x){if(!(b instanceof e))throw new TypeError("a Range is required");return this.set.some(u=>a(u,x)&&b.set.some(k=>a(k,x)&&u.every(N=>k.every(f=>N.intersects(f,x)))))}test(b){if(!b)return!1;if(typeof b=="string")try{b=new i(b,this.options)}catch{return!1}for(let x=0;x<this.set.length;x++)if(j(this.set[x],b,this.options))return!0;return!1}}Ll=e;const l=Hg,t=new l({max:1e3}),c=dt,n=Bl(),I=kl,i=ie,{safeRe:g,t:C,comparatorTrimReplace:r,tildeTrimReplace:d,caretTrimReplace:m}=dl,{FLAG_INCLUDE_PRERELEASE:p,FLAG_LOOSE:s}=ul,D=J=>J.value==="<0.0.0-0",K=J=>J.value==="",a=(J,b)=>{let x=!0;const u=J.slice();let k=u.pop();for(;x&&u.length;)x=u.every(N=>k.intersects(N,b)),k=u.pop();return x},L=(J,b)=>(I("comp",J,b),J=E(J,b),I("caret",J),J=M(J,b),I("tildes",J),J=h(J,b),I("xrange",J),J=R(J,b),I("stars",J),J),T=J=>!J||J.toLowerCase()==="x"||J==="*",M=(J,b)=>J.trim().split(/\s+/).map(x=>O(x,b)).join(" "),O=(J,b)=>{const x=b.loose?g[C.TILDELOOSE]:g[C.TILDE];return J.replace(x,(u,k,N,f,z)=>{I("tilde",J,u,k,N,f,z);let y;return T(k)?y="":T(N)?y=`>=${k}.0.0 <${+k+1}.0.0-0`:T(f)?y=`>=${k}.${N}.0 <${k}.${+N+1}.0-0`:z?(I("replaceTilde pr",z),y=`>=${k}.${N}.${f}-${z} <${k}.${+N+1}.0-0`):y=`>=${k}.${N}.${f} <${k}.${+N+1}.0-0`,I("tilde return",y),y})},E=(J,b)=>J.trim().split(/\s+/).map(x=>de(x,b)).join(" "),de=(J,b)=>{I("caret",J,b);const x=b.loose?g[C.CARETLOOSE]:g[C.CARET],u=b.includePrerelease?"-0":"";return J.replace(x,(k,N,f,z,y)=>{I("caret",J,k,N,f,z,y);let Q;return T(N)?Q="":T(f)?Q=`>=${N}.0.0${u} <${+N+1}.0.0-0`:T(z)?N==="0"?Q=`>=${N}.${f}.0${u} <${N}.${+f+1}.0-0`:Q=`>=${N}.${f}.0${u} <${+N+1}.0.0-0`:y?(I("replaceCaret pr",y),N==="0"?f==="0"?Q=`>=${N}.${f}.${z}-${y} <${N}.${f}.${+z+1}-0`:Q=`>=${N}.${f}.${z}-${y} <${N}.${+f+1}.0-0`:Q=`>=${N}.${f}.${z}-${y} <${+N+1}.0.0-0`):(I("no pr"),N==="0"?f==="0"?Q=`>=${N}.${f}.${z}${u} <${N}.${f}.${+z+1}-0`:Q=`>=${N}.${f}.${z}${u} <${N}.${+f+1}.0-0`:Q=`>=${N}.${f}.${z} <${+N+1}.0.0-0`),I("caret return",Q),Q})},h=(J,b)=>(I("replaceXRanges",J,b),J.split(/\s+/).map(x=>B(x,b)).join(" ")),B=(J,b)=>{J=J.trim();const x=b.loose?g[C.XRANGELOOSE]:g[C.XRANGE];return J.replace(x,(u,k,N,f,z,y)=>{I("xRange",J,u,k,N,f,z,y);const Q=T(N),_=Q||T(f),F=_||T(z),q=F;return k==="="&&q&&(k=""),y=b.includePrerelease?"-0":"",Q?k===">"||k==="<"?u="<0.0.0-0":u="*":k&&q?(_&&(f=0),z=0,k===">"?(k=">=",_?(N=+N+1,f=0,z=0):(f=+f+1,z=0)):k==="<="&&(k="<",_?N=+N+1:f=+f+1),k==="<"&&(y="-0"),u=`${k+N}.${f}.${z}${y}`):_?u=`>=${N}.0.0${y} <${+N+1}.0.0-0`:F&&(u=`>=${N}.${f}.0${y} <${N}.${+f+1}.0-0`),I("xRange return",u),u})},R=(J,b)=>(I("replaceStars",J,b),J.trim().replace(g[C.STAR],"")),G=(J,b)=>(I("replaceGTE0",J,b),J.trim().replace(g[b.includePrerelease?C.GTE0PRE:C.GTE0],"")),Re=J=>(b,x,u,k,N,f,z,y,Q,_,F,q,Ae)=>(T(u)?x="":T(k)?x=`>=${u}.0.0${J?"-0":""}`:T(N)?x=`>=${u}.${k}.0${J?"-0":""}`:f?x=`>=${x}`:x=`>=${x}${J?"-0":""}`,T(Q)?y="":T(_)?y=`<${+Q+1}.0.0-0`:T(F)?y=`<${Q}.${+_+1}.0-0`:q?y=`<=${Q}.${_}.${F}-${q}`:J?y=`<${Q}.${_}.${+F+1}-0`:y=`<=${y}`,`${x} ${y}`.trim()),j=(J,b,x)=>{for(let u=0;u<J.length;u++)if(!J[u].test(b))return!1;if(b.prerelease.length&&!x.includePrerelease){for(let u=0;u<J.length;u++)if(I(J[u].semver),J[u].semver!==n.ANY&&J[u].semver.prerelease.length>0){const k=J[u].semver;if(k.major===b.major&&k.minor===b.minor&&k.patch===b.patch)return!0}return!1}return!0};return Ll}var Dl,Dt;function Bl(){if(Dt)return Dl;Dt=1;const e=Symbol("SemVer ANY");class l{static get ANY(){return e}constructor(d,m){if(m=t(m),d instanceof l){if(d.loose===!!m.loose)return d;d=d.value}d=d.trim().split(/\s+/).join(" "),i("comparator",d,m),this.options=m,this.loose=!!m.loose,this.parse(d),this.semver===e?this.value="":this.value=this.operator+this.semver.version,i("comp",this)}parse(d){const m=this.options.loose?c[n.COMPARATORLOOSE]:c[n.COMPARATOR],p=d.match(m);if(!p)throw new TypeError(`Invalid comparator: ${d}`);this.operator=p[1]!==void 0?p[1]:"",this.operator==="="&&(this.operator=""),p[2]?this.semver=new g(p[2],this.options.loose):this.semver=e}toString(){return this.value}test(d){if(i("Comparator.test",d,this.options.loose),this.semver===e||d===e)return!0;if(typeof d=="string")try{d=new g(d,this.options)}catch{return!1}return I(d,this.operator,this.semver,this.options)}intersects(d,m){if(!(d instanceof l))throw new TypeError("a Comparator is required");return this.operator===""?this.value===""?!0:new C(d.value,m).test(this.value):d.operator===""?d.value===""?!0:new C(this.value,m).test(d.semver):(m=t(m),m.includePrerelease&&(this.value==="<0.0.0-0"||d.value==="<0.0.0-0")||!m.includePrerelease&&(this.value.startsWith("<0.0.0")||d.value.startsWith("<0.0.0"))?!1:!!(this.operator.startsWith(">")&&d.operator.startsWith(">")||this.operator.startsWith("<")&&d.operator.startsWith("<")||this.semver.version===d.semver.version&&this.operator.includes("=")&&d.operator.includes("=")||I(this.semver,"<",d.semver,m)&&this.operator.startsWith(">")&&d.operator.startsWith("<")||I(this.semver,">",d.semver,m)&&this.operator.startsWith("<")&&d.operator.startsWith(">")))}}Dl=l;const t=dt,{safeRe:c,t:n}=dl,I=wc,i=kl,g=ie,C=be();return Dl}const Mg=be(),zg=(e,l,t)=>{try{l=new Mg(l,t)}catch{return!1}return l.test(e)};var yl=zg;const jg=be(),wg=(e,l)=>new jg(e,l).set.map(t=>t.map(c=>c.value).join(" ").trim().split(" "));var Lg=wg;const Dg=ie,Og=be(),Pg=(e,l,t)=>{let c=null,n=null,I=null;try{I=new Og(l,t)}catch{return null}return e.forEach(i=>{I.test(i)&&(!c||n.compare(i)===-1)&&(c=i,n=new Dg(c,t))}),c};var vg=Pg;const qg=ie,$g=be(),_g=(e,l,t)=>{let c=null,n=null,I=null;try{I=new $g(l,t)}catch{return null}return e.forEach(i=>{I.test(i)&&(!c||n.compare(i)===1)&&(c=i,n=new qg(c,t))}),c};var ei=_g;const Ol=ie,li=be(),Ot=xl,ti=(e,l)=>{e=new li(e,l);let t=new Ol("0.0.0");if(e.test(t)||(t=new Ol("0.0.0-0"),e.test(t)))return t;t=null;for(let c=0;c<e.set.length;++c){const n=e.set[c];let I=null;n.forEach(i=>{const g=new Ol(i.semver.version);switch(i.operator){case">":g.prerelease.length===0?g.patch++:g.prerelease.push(0),g.raw=g.format();case"":case">=":(!I||Ot(g,I))&&(I=g);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${i.operator}`)}}),I&&(!t||Ot(t,I))&&(t=I)}return t&&e.test(t)?t:null};var ci=ti;const ni=be(),Ii=(e,l)=>{try{return new ni(e,l).range||"*"}catch{return null}};var gi=Ii;const ii=ie,Dc=Bl(),{ANY:Ci}=Dc,Vi=be(),Zi=yl,Pt=xl,vt=at,di=Wt,oi=st,ai=(e,l,t,c)=>{e=new ii(e,c),l=new Vi(l,c);let n,I,i,g,C;switch(t){case">":n=Pt,I=di,i=vt,g=">",C=">=";break;case"<":n=vt,I=oi,i=Pt,g="<",C="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(Zi(e,l,c))return!1;for(let r=0;r<l.set.length;++r){const d=l.set[r];let m=null,p=null;if(d.forEach(s=>{s.semver===Ci&&(s=new Dc(">=0.0.0")),m=m||s,p=p||s,n(s.semver,m.semver,c)?m=s:i(s.semver,p.semver,c)&&(p=s)}),m.operator===g||m.operator===C||(!p.operator||p.operator===g)&&I(e,p.semver))return!1;if(p.operator===C&&i(e,p.semver))return!1}return!0};var mt=ai;const si=mt,Wi=(e,l,t)=>si(e,l,">",t);var mi=Wi;const Xi=mt,bi=(e,l,t)=>Xi(e,l,"<",t);var Ri=bi;const qt=be(),Ai=(e,l,t)=>(e=new qt(e,t),l=new qt(l,t),e.intersects(l,t));var ri=Ai;const Gi=yl,hi=Xe;var Ji=(e,l,t)=>{const c=[];let n=null,I=null;const i=e.sort((d,m)=>hi(d,m,t));for(const d of i)Gi(d,l,t)?(I=d,n||(n=d)):(I&&c.push([n,I]),I=null,n=null);n&&c.push([n,null]);const g=[];for(const[d,m]of c)d===m?g.push(d):!m&&d===i[0]?g.push("*"):m?d===i[0]?g.push(`<=${m}`):g.push(`${d} - ${m}`):g.push(`>=${d}`);const C=g.join(" || "),r=typeof l.raw=="string"?l.raw:String(l);return C.length<r.length?C:l};const $t=be(),Xt=Bl(),{ANY:Pl}=Xt,qe=yl,bt=Xe,Si=(e,l,t={})=>{if(e===l)return!0;e=new $t(e,t),l=new $t(l,t);let c=!1;e:for(const n of e.set){for(const I of l.set){const i=pi(n,I,t);if(c=c||i!==null,i)continue e}if(c)return!1}return!0},Fi=[new Xt(">=0.0.0-0")],_t=[new Xt(">=0.0.0")],pi=(e,l,t)=>{if(e===l)return!0;if(e.length===1&&e[0].semver===Pl){if(l.length===1&&l[0].semver===Pl)return!0;t.includePrerelease?e=Fi:e=_t}if(l.length===1&&l[0].semver===Pl){if(t.includePrerelease)return!0;l=_t}const c=new Set;let n,I;for(const s of e)s.operator===">"||s.operator===">="?n=ec(n,s,t):s.operator==="<"||s.operator==="<="?I=lc(I,s,t):c.add(s.semver);if(c.size>1)return null;let i;if(n&&I){if(i=bt(n.semver,I.semver,t),i>0)return null;if(i===0&&(n.operator!==">="||I.operator!=="<="))return null}for(const s of c){if(n&&!qe(s,String(n),t)||I&&!qe(s,String(I),t))return null;for(const D of l)if(!qe(s,String(D),t))return!1;return!0}let g,C,r,d,m=I&&!t.includePrerelease&&I.semver.prerelease.length?I.semver:!1,p=n&&!t.includePrerelease&&n.semver.prerelease.length?n.semver:!1;m&&m.prerelease.length===1&&I.operator==="<"&&m.prerelease[0]===0&&(m=!1);for(const s of l){if(d=d||s.operator===">"||s.operator===">=",r=r||s.operator==="<"||s.operator==="<=",n){if(p&&s.semver.prerelease&&s.semver.prerelease.length&&s.semver.major===p.major&&s.semver.minor===p.minor&&s.semver.patch===p.patch&&(p=!1),s.operator===">"||s.operator===">="){if(g=ec(n,s,t),g===s&&g!==n)return!1}else if(n.operator===">="&&!qe(n.semver,String(s),t))return!1}if(I){if(m&&s.semver.prerelease&&s.semver.prerelease.length&&s.semver.major===m.major&&s.semver.minor===m.minor&&s.semver.patch===m.patch&&(m=!1),s.operator==="<"||s.operator==="<="){if(C=lc(I,s,t),C===s&&C!==I)return!1}else if(I.operator==="<="&&!qe(I.semver,String(s),t))return!1}if(!s.operator&&(I||n)&&i!==0)return!1}return!(n&&r&&!I&&i!==0||I&&d&&!n&&i!==0||p||m)},ec=(e,l,t)=>{if(!e)return l;const c=bt(e.semver,l.semver,t);return c>0?e:c<0||l.operator===">"&&e.operator===">="?l:e},lc=(e,l,t)=>{if(!e)return l;const c=bt(e.semver,l.semver,t);return c<0?e:c>0||l.operator==="<"&&e.operator==="<="?l:e};var Ui=Si;const vl=dl,tc=ul,Ni=ie,cc=Mc,Yi=Oe,ui=YI,ki=xI,xi=yI,Bi=TI,yi=KI,fi=zI,Ti=LI,Qi=PI,Ei=Xe,Ki=_I,Hi=tg,Mi=ot,zi=gg,ji=Vg,wi=xl,Li=at,Di=zc,Oi=jc,Pi=st,vi=Wt,qi=wc,$i=kg,_i=Bl(),eC=be(),lC=yl,tC=Lg,cC=vg,nC=ei,IC=ci,gC=gi,iC=mt,CC=mi,VC=Ri,ZC=ri,dC=Ji,oC=Ui;var aC={parse:Yi,valid:ui,clean:ki,inc:xi,diff:Bi,major:yi,minor:fi,patch:Ti,prerelease:Qi,compare:Ei,rcompare:Ki,compareLoose:Hi,compareBuild:Mi,sort:zi,rsort:ji,gt:wi,lt:Li,eq:Di,neq:Oi,gte:Pi,lte:vi,cmp:qi,coerce:$i,Comparator:_i,Range:eC,satisfies:lC,toComparators:tC,maxSatisfying:cC,minSatisfying:nC,minVersion:IC,validRange:gC,outside:iC,gtr:CC,ltr:VC,intersects:ZC,simplifyRange:dC,subset:oC,SemVer:Ni,re:vl.re,src:vl.src,tokens:vl.t,SEMVER_SPEC_VERSION:tc.SEMVER_SPEC_VERSION,RELEASE_TYPES:tc.RELEASE_TYPES,compareIdentifiers:cc.compareIdentifiers,rcompareIdentifiers:cc.rcompareIdentifiers},sC=aC;const WC=sI(sC);async function mC(e,l){e=e??"pandoc";let t=await ql(`${e} --version`,{env:l});return t=t.substring(0,t.indexOf(`
`)).replace("pandoc.exe","").replace("pandoc","").trim(),WC.parse(t)}const nc=me('<div class="modal-button-container">'),XC=e=>{const{plugin:l,lang:t}=e,[c,n]=oI(l.settings),[I,i]=Ce(),g=ce(()=>Object.entries(Object.assign({},oe(Il),oe(c.env)??{})).map(([h,B])=>`${h}="${B}"`).join(`
`)),C=(...h)=>{n(...h),l.saveSettings()},r=h=>{try{const B={};for(let R of h.split(`
`)){R=R.trim();const G=R.indexOf("=");if(G>0){const Re=R.substring(0,G);let j=R.substring(G+1).trim();j.startsWith('"')&&j.endsWith('"')&&(j=j.substring(1,j.length-1)),B[Re]=j}}C("env",Ye(c.env??{},B))}catch(B){alert(B)}},d=ce(()=>c.items.find(h=>h.name===c.lastEditName)??c.items.first()),m=h=>{const B=d();return h===void 0||h===B.type?B:void 0},p=ce(()=>oe(c.customDefaultExportDirectory)),s=h=>{const B=c.items.findIndex(R=>R.name===c.lastEditName);C("items",B===-1?0:B,aI(R=>(h(R),R)))},D=ce(()=>{const h=I();return h?t.settingTab.version(h):t.settingTab.pandocNotFound}),[K,a]=Ce(),L=()=>{const[h,B]=Ce(Object.keys(Rl)[0]),[R,G]=Ce(),Re=()=>{const j=JSON.parse(JSON.stringify(Rl[h()]));j.name=R(),Al(()=>{C("items",J=>[...J,j]),C("lastEditName",j.name)}),a(void 0)};return X(lt,{app,get title(){return t.settingTab.new},onClose:()=>a(void 0),get children(){return[X(H,{get name(){return t.settingTab.template},get children(){return X(tl,{get options(){return Object.entries(Rl).map(([j,J])=>({name:J.name,value:j}))},get selected(){return R()??h()},onChange:j=>B(j)})}}),X(H,{get name(){return t.settingTab.name},get children(){return X(Ze,{get value(){return R()??""},onChange:j=>G(j)})}}),(()=>{const j=nc();return Ve(j,X(tt,{cta:!0,onClick:Re,get children(){return t.settingTab.save}})),j})()]}})},T=()=>{const[h,B]=Ce(m().name),R=()=>{Al(()=>{s(G=>G.name=h()),C("lastEditName",h())}),a(void 0)};return X(lt,{app,get title(){return t.settingTab.rename},onClose:()=>a(void 0),get children(){return[X(H,{get name(){return t.settingTab.name},get children(){return X(Ze,{get value(){return h()??""},onChange:G=>B(G)})}}),(()=>{const G=nc();return Ve(G,X(tt,{cta:!0,onClick:R,get children(){return t.settingTab.add}})),G})()]}})},M=()=>{const h=()=>m("pandoc"),B=R=>{s(G=>G.type==="pandoc"?R(G):void 0)};return[X(H,{get name(){return t.settingTab.arguments},get children(){return X(Ze,{style:"width: 100%",get value(){return h().arguments??""},onChange:R=>B(G=>G.arguments=R)})}}),X(H,{get name(){return t.settingTab.extraArguments},get children(){return X(Ze,{style:"width: 100%",get value(){return h().customArguments??""},get title(){return h().customArguments},onChange:R=>B(G=>G.customArguments=R)})}}),X(H,{get name(){return t.settingTab.afterExport},heading:!0}),X(H,{get name(){return t.settingTab.openExportedFileLocation},get children(){return X(Ge,{get checked(){return h().openExportedFileLocation??!1},onChange:R=>B(G=>G.openExportedFileLocation=R)})}}),X(H,{get name(){return t.settingTab.openExportedFile},get children(){return X(Ge,{get checked(){return h().openExportedFile??!1},onChange:R=>B(G=>G.openExportedFile=R)})}}),X(H,{get name(){return t.settingTab.runCommand},get children(){return X(Ge,{get checked(){return h().runCommand},onChange:R=>B(G=>G.runCommand=R)})}}),X(rl,{get when(){return h().runCommand},get children(){return X(H,{get children(){return X(Ze,{style:"width: 100%",get value(){return h().command??""},onChange:R=>B(G=>G.command=R)})}})}})]},O=()=>{const h=()=>m("custom"),B=R=>{s(G=>G.type==="custom"?R(G):void 0)};return[X(H,{get name(){return t.settingTab.command},get children(){return X(Ze,{style:"width: 100%",get value(){return h().command},onChange:R=>B(G=>G.command=R)})}}),X(H,{get name(){return t.settingTab.targetFileExtensions},get children(){return X(Ze,{get value(){return h().targetFileExtensions??""},onChange:R=>B(G=>G.targetFileExtensions=R)})}}),X(H,{get name(){return t.settingTab.afterExport},heading:!0}),X(H,{get name(){return t.settingTab.showCommandOutput},get children(){return X(Ge,{get checked(){return h().showCommandOutput??!1},onChange:R=>B(G=>G.showCommandOutput=R)})}}),X(H,{get name(){return t.settingTab.openExportedFileLocation},get children(){return X(Ge,{get checked(){return h().openExportedFileLocation??!1},onChange:R=>B(G=>G.openExportedFileLocation=R)})}}),X(H,{get name(){return t.settingTab.openExportedFile},get children(){return X(Ge,{get checked(){return h().openExportedFile??!1},onChange:R=>B(G=>G.openExportedFile=R)})}})]},E=async()=>{await l.resetSettings(),C(l.settings)},de=async()=>{const h=await fe.remote.dialog.showOpenDialog({defaultPath:p()??fe.remote.app.getPath("documents"),properties:["createDirectory","openDirectory"]});!h.canceled&&h.filePaths.length>0&&C("customDefaultExportDirectory",B=>Ye(B,h.filePaths[0]))};return ue(async()=>{try{const h=oc(oe(c.env)??{});i((await mC(oe(c.pandocPath),h)).version)}catch{i(void 0)}}),[X(H,{get name(){return t.settingTab.general},heading:!0,get children(){return X(xe,{icon:"reset",onClick:E})}}),X(H,{get name(){return t.settingTab.pandocPath},get description(){return D()},get children(){return X(Ze,{get placeholder(){return t.settingTab.pandocPathPlaceholder},get value(){return oe(c.pandocPath)??""},onChange:h=>C("pandocPath",B=>Ye(B,h))})}}),X(H,{get name(){return t.settingTab.defaultFolderForExportedFile},get children(){return X(tl,{get options(){return[{name:t.settingTab.auto,value:"Auto"},{name:t.settingTab.sameFolderWithCurrentFile,value:"Same"},{name:t.settingTab.customLocation,value:"Custom"}]},onChange:h=>C("defaultExportDirectoryMode",h)})}}),X(rl,{get when(){return c.defaultExportDirectoryMode==="Custom"},get children(){return X(H,{get children(){return[X(Ze,{get value(){return p()??""},get title(){return p()}}),X(xe,{icon:"folder",onClick:de})]}})}}),X(H,{get name(){return t.settingTab.openExportedFileLocation},get children(){return X(Ge,{get checked(){return c.openExportedFileLocation},onChange:h=>C("openExportedFileLocation",h)})}}),X(H,{get name(){return t.settingTab.openExportedFile},get children(){return X(Ge,{get checked(){return c.openExportedFile},onChange:h=>C("openExportedFile",h)})}}),X(H,{get name(){return t.settingTab.editCommandTemplate},heading:!0}),X(H,{get name(){return t.settingTab.chooseCommandTemplate},get children(){return[X(tl,{get options(){return c.items.map(h=>({name:h.name,value:h.name}))},get selected(){return c.lastEditName},onChange:h=>C("lastEditName",h)}),X(xe,{icon:"plus",get tooltip(){return t.settingTab.add},onClick:()=>a(()=>L)}),X(xe,{icon:"pencil",get tooltip(){return t.settingTab.rename},onClick:()=>a(()=>T)}),X(xe,{icon:"trash",get tooltip(){return t.settingTab.remove},onClick:()=>Al(()=>{var h;C("items",B=>B.filter(R=>{var G;return R.name!==((G=m())==null?void 0:G.name)})),C("lastEditName",(h=c.items.first())==null?void 0:h.name)})})]}}),X(bn,{get children(){return[X(St,{get when(){return m("pandoc")},get children(){return X(M,{})}}),X(St,{get when(){return m("custom")},get children(){return X(O,{})}})]}}),X(H,{get name(){return t.settingTab.advanced},heading:!0}),X(H,{get name(){return t.settingTab.environmentVariables},get description(){return t.settingTab.environmentVariablesDesc},get children(){return X(lI,{style:"width: 100%;height: 5em",get value(){return g()},onChange:r})}}),X(rl,{get when(){return K()},get children(){return X(Tn,{get component(){return K()},ref:h=>document.body.appendChild(h)})}})]};var il;class bC extends We.PluginSettingTab{constructor(t){super(t.app,t);rt(this,il,void 0);this.plugin=t,this.name=this.plugin.lang.settingTab.title}get lang(){return this.plugin.lang}display(){Gt(this,il,ll(t=>{const c=this;return Ve(this.containerEl,X(XC,{get plugin(){return c.plugin},get lang(){return c.lang}})),Cl(()=>{this.containerEl.empty()}),t}))}hide(){At(this,il).call(this)}}il=new WeakMap;const RC=Uint8Array.from(atob("LS0gY3JlZGl0cyB0byB0YXJsZWIg4oCUIFN0YWNrRXhjaGFuZ2U6IGh0dHBzOi8vdGV4LnN0YWNrZXhjaGFuZ2UuY29tL3F1ZXN0aW9ucy8zOTIwNzAvcGFuZG9jLW1hcmtkb3duLWNyZWF0ZS1zZWxmLWNvbnRhaW5lZC1iaWItZmlsZS1mcm9tLWNpdGVkLXJlZmVyZW5jZXMKZnVuY3Rpb24gUGFuZG9jKGQpCiAgZC5tZXRhLnJlZmVyZW5jZXMgPSBwYW5kb2MudXRpbHMucmVmZXJlbmNlcyhkKQogIGQubWV0YS5iaWJsaW9ncmFwaHkgPSBuaWwKICByZXR1cm4gZAplbmQK"),e=>e.charCodeAt(0)),AC=Object.freeze(Object.defineProperty({__proto__:null,default:RC},Symbol.toStringTag,{value:"Module"})),rC=Uint8Array.from(atob("cGFja2FnZS5wYXRoPXBhY2thZ2UucGF0aC4uIjsiIC4uZGVidWcuZ2V0aW5mbygxKS5zb3VyY2U6bWF0Y2goIiguKlsvXFxdKSIpOnN1YigyKSAuLiAiPy5sdWEiCgpNb2RlPSdodWdvJwoKcmVxdWlyZSgnbWFya2Rvd24nKQ=="),e=>e.charCodeAt(0)),GC=Object.freeze(Object.defineProperty({__proto__:null,default:rC},Symbol.toStringTag,{value:"Module"})),hC=Uint8Array.from(atob("cGFja2FnZS5wYXRoPWRlYnVnLmdldGluZm8oMSkuc291cmNlOmdzdWIoJ0AnLCcnKTpzdWIoMCk6bWF0Y2goJyguKlsvXFxdKScpOnN1YigwKSAuLiAnPy5sdWEnIC4uICc7JyAuLiBwYWNrYWdlLnBhdGgKCnJlcXVpcmUoInBvbHlmaWxsIikKbG9jYWwgdXJsID0gcmVxdWlyZSgndXJsJykKCmxvY2FsIHBhbmRvYz1wYW5kb2MKbG9jYWwgUEFORE9DX1NUQVRFPVBBTkRPQ19TVEFURQoKUEFORE9DX1ZFUlNJT046bXVzdF9iZV9hdF9sZWFzdCAnMi4xNycKCmxvY2FsIFBBVEggPSBwYW5kb2MucGF0aApsb2NhbCBkb2NfZGlyID0gbmlsCmxvY2FsIG1lZGlhX2RpciA9IG5pbAoKaWYgTW9kZSA9PSBuaWwgdGhlbgogIE1vZGUgPSAnZGVmYXVsdCcKZW5kCgotLSBwcmludCgiTW9kZTogIi4uTW9kZSkKCmlmIFBBTkRPQ19TVEFURS5vdXRwdXRfZmlsZSB0aGVuCiAgbG9jYWwgb3V0cHV0X2ZpbGUgPSBQQU5ET0NfU1RBVEUub3V0cHV0X2ZpbGUKICBkb2NfZGlyID0gUEFUSC5kaXJlY3Rvcnkob3V0cHV0X2ZpbGUpCiAgaWYgUEFORE9DX1dSSVRFUl9PUFRJT05TLnZhcmlhYmxlc1sibWVkaWFfZGlyIl0gdGhlbgogICAgbWVkaWFfZGlyID0gUEFORE9DX1dSSVRFUl9PUFRJT05TLnZhcmlhYmxlc1sibWVkaWFfZGlyIl0KICBlbHNlCiAgICBtZWRpYV9kaXIgPSBQQVRILnNwbGl0X2V4dGVuc2lvbihvdXRwdXRfZmlsZSkKICAgIGlmIE1vZGUgfj0gJ2h1Z28nIHRoZW4KICAgICAgbWVkaWFfZGlyID0gbWVkaWFfZGlyIC4uICctbWVkaWEnCiAgICBlbmQKICBlbmQKZW5kCmFzc2VydChkb2NfZGlyLCAiZG9jX2RpciBpcyBuaWwiKQphc3NlcnQobWVkaWFfZGlyLCAibWVkaWFfZGlyIGlzIG5pbCIpCgoKbG9jYWwgZnVuY3Rpb24gZ2V0X2Fic29sdXRlX3BhdGgoZmlsZV9wYXRoKQogIGlmIFBBVEguaXNfYWJzb2x1dGUoZmlsZV9wYXRoKSB0aGVuCiAgICByZXR1cm4gZmlsZV9wYXRoCiAgZW5kCiAgZm9yIF8sIGRpciBpbiBwYWlycyhQQU5ET0NfU1RBVEUucmVzb3VyY2VfcGF0aCkgZG8KICAgIGxvY2FsIGZ1bGxfcGF0aCA9IFBBVEguam9pbih7ZGlyLCBmaWxlX3BhdGh9KQogICAgaWYgb3MuZXhpc3RzKGZ1bGxfcGF0aCkgdGhlbgogICAgICByZXR1cm4gZnVsbF9wYXRoCiAgICBlbmQKICBlbmQKICBmb3IgXywgZmlsZSBpbiBwYWlycyhQQU5ET0NfU1RBVEUuaW5wdXRfZmlsZXMpIGRvCiAgICBpZiBub3QgUEFUSC5pc19hYnNvbHV0ZShmaWxlKSB0aGVuCiAgICAgIGZpbGUgPSBQQVRILmpvaW4oe3BhbmRvYy5zeXN0ZW0uZ2V0X3dvcmtpbmdfZGlyZWN0b3J5KCksIGZpbGVfcGF0aH0pCiAgICBlbmQKICAgIGxvY2FsIGRpciA9IFBBVEguZGlyZWN0b3J5KGZpbGUpCiAgICBsb2NhbCBmdWxsX3BhdGggPSBQQVRILmpvaW4oe2RpciwgZmlsZV9wYXRofSkKICAgIGlmIG9zLmV4aXN0cyhmdWxsX3BhdGgpIHRoZW4KICAgICAgcmV0dXJuIGZ1bGxfcGF0aAogICAgZW5kCiAgZW5kCiAgcmV0dXJuIG5pbAplbmQKCmxvY2FsIGZ1bmN0aW9uIGdldF9vdXRwdXRfZmlsZShmaWxlX3BhdGgpCiAgaWYgbWVkaWFfZGlyIHRoZW4KICAgIGxvY2FsIG5ld19maWxlX25hbWUgPSBwYW5kb2MudXRpbHMuc2hhMShmaWxlX3BhdGgpCiAgICBsb2NhbCBfLCBuZXdfZmlsZV9leHQgPSBQQVRILnNwbGl0X2V4dGVuc2lvbihmaWxlX3BhdGgpCiAgICBmaWxlX3BhdGggPSBuZXdfZmlsZV9uYW1lIC4uIG5ld19maWxlX2V4dAogICAgbG9jYWwgZnVsbF9wYXRoID0gUEFUSC5qb2luKHttZWRpYV9kaXIsIGZpbGVfcGF0aH0pCiAgICByZXR1cm4gZnVsbF9wYXRoCiAgZWxzZQogICAgcmV0dXJuIG5pbAogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGV4dHJhY3RfbWVkaWEoZmlsZV9wYXRoKQogIG9zLm1rZGlyKG1lZGlhX2RpcikKICBmaWxlX3BhdGggPSB1cmwuZGVjb2RlKGZpbGVfcGF0aCkKICBsb2NhbCBhYnNfcGF0aCA9IGdldF9hYnNvbHV0ZV9wYXRoKGZpbGVfcGF0aCkKICBsb2NhbCBmaWxlID0gZ2V0X291dHB1dF9maWxlKGZpbGVfcGF0aCkKICBpZiBhYnNfcGF0aCBhbmQgZmlsZSB0aGVuCiAgICBpZiBub3Qgb3MuZXhpc3RzKGZpbGUpIHRoZW4KICAgICAgb3MuY29weShhYnNfcGF0aCwgZmlsZSkKICAgIGVuZAogICAgbG9jYWwgcmVsX3BhdGggPSBQQVRILm1ha2VfcmVsYXRpdmUoZmlsZSwgZG9jX2RpciwgZmFsc2UpCiAgICBsb2NhbCBwYXJ0cyA9IFBBVEguc3BsaXQocmVsX3BhdGgpCiAgICBmb3IgaSx2IGluIGlwYWlycyhwYXJ0cykgZG8KICAgICAgcGFydHNbaV0gPSB1cmwuZW5jb2RlKHYpCiAgICBlbmQKICAgIGxvY2FsIGVuY29kZWRfcmVsX3BhdGggPSB0YWJsZS5jb25jYXQocGFydHMsICIvIikKICAgIGlmIE1vZGUgPT0gJ2h1Z28nIHRoZW4KICAgICAgZW5jb2RlZF9yZWxfcGF0aCA9ICcuLi8nIC4uIGVuY29kZWRfcmVsX3BhdGgKICAgIGVuZAogICAgcmV0dXJuIGVuY29kZWRfcmVsX3BhdGgKICBlbmQKZW5kCgpsb2NhbCBmdW5jdGlvbiByYXcocykKICByZXR1cm4gcGFuZG9jLlJhd0lubGluZSgnbWFya2Rvd24nLCBzKQplbmQKCmZ1bmN0aW9uIEltYWdlKGVsKQogIGxvY2FsIHNyYyA9IGV4dHJhY3RfbWVkaWEoZWwuc3JjKQogIGlmIHNyYyB0aGVuCiAgICBlbC5zcmMgPSBzcmMKICBlbmQKICByZXR1cm4gZWwKZW5kCgpmdW5jdGlvbiBTcGFjZSgpCiAgcmV0dXJuIHJhdygnICcpCmVuZAoKZnVuY3Rpb24gU29mdEJyZWFrKCkKICByZXR1cm4gcmF3KCdcbicpCmVuZAoKZnVuY3Rpb24gUmF3SW5saW5lKGVsKQogIGlmIGVsLmZvcm1hdCA9PSAiaHRtbCIgdGhlbgogICAgZWwuZm9ybWF0ID0gJ21hcmtkb3duJwogICAgZWwudGV4dCA9IHN0cmluZy5nc3ViKGVsLnRleHQsICc8aW1nW14+XSs+JywgZnVuY3Rpb24oaW1nKQogICAgICByZXR1cm4gc3RyaW5nLmdzdWIoaW1nLCAnc3JjPSIoW14iXSspIicsIGZ1bmN0aW9uKHVybCkKICAgICAgICBpZiBzdHJpbmcuZmluZCh1cmwsICdeW0hoXVtUdF1bVHRdW1BwXVtTc10/Oi8vJykgPT0gbmlsICB0aGVuCiAgICAgICAgICBsb2NhbCBleHRyYWN0X21lZGlhX3VybCA9IGV4dHJhY3RfbWVkaWEodXJsKQogICAgICAgICAgaWYgZXh0cmFjdF9tZWRpYV91cmwgdGhlbgogICAgICAgICAgICByZXR1cm4gJ3NyYz0iJyAuLiBleHRyYWN0X21lZGlhX3VybCAuLiAnIicKICAgICAgICAgIGVuZAogICAgICAgICAgcmV0dXJuICcxMjMnCiAgICAgICAgZW5kCiAgICAgICAgcmV0dXJuICdzcmM9IicgLi4gdXJsIC4uICciJwogICAgICBlbmQpCiAgICBlbmQpCiAgZW5kCiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gUmF3QmxvY2soZWwpCiAgaWYgZWwuZm9ybWF0ID09ICJodG1sIiB0aGVuCiAgICBlbC5mb3JtYXQgPSAnbWFya2Rvd24nCiAgZW5kCiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gTWF0aChlbCkKICBpZiBNb2RlID09ICdodWdvJyB0aGVuCiAgICBpZiBlbC5tYXRodHlwZSA9PSAnRGlzcGxheU1hdGgnIHRoZW4KICAgICAgcmV0dXJuIHJhdygne3s8IG1hdGhqYXggPn19XG4kJCcgIC4uIGVsLnRleHQgLi4gJyQkXG57ezwvbWF0aGpheCA+fX0nKQogICAgZWxzZQogICAgICBlbC50ZXh0ID0gc3RyaW5nLmdzdWIoZWwudGV4dCwgJ1xcW1xce1xcfV0nLCBmdW5jdGlvbiAodikKICAgICAgICByZXR1cm4gJ1xcJyAuLiB2CiAgICAgIGVuZCkKICAgICAgZWwudGV4dCA9IHN0cmluZy5nc3ViKGVsLnRleHQsICdfJywgZnVuY3Rpb24gKHYpCiAgICAgICAgcmV0dXJuICdcXCcgLi4gdgogICAgICBlbmQpCiAgICBlbmQKICBlbmQKICByZXR1cm4gZWwKZW5kCgpsb2NhbCBmdW5jdGlvbiBoZWFkZXJMaW5rKGlucHV0KQogIC0tIGdpdGh1YiBzdHlsZSBzZWN0aW9uIGxpbmsKICByZXR1cm4gIiMiLi5pbnB1dDpnc3ViKCcgJywgJy0nKQplbmQKCgpsb2NhbCBmdW5jdGlvbiBpbnNlcnRMaW5rKGNvbnRlbnQsIGxpbmtEZXNjcmlwdGlvbikKICBsb2NhbCBkZXNjcmlwdGlvblRleHQgPSB0YWJsZS5jb25jYXQobGlua0Rlc2NyaXB0aW9uLCAiIikKCiAgaWYgc3RyaW5nLmZpbmQoZGVzY3JpcHRpb25UZXh0LCAnfCcpIHRoZW4KICAgIGxvY2FsIHRhcmdldCwgZGVzYyA9IGRlc2NyaXB0aW9uVGV4dDptYXRjaCgiKC4qKXwoLiopIikKICAgIHRhYmxlLmluc2VydChjb250ZW50LCBwYW5kb2MuTGluayhkZXNjLCBoZWFkZXJMaW5rKHRhcmdldCkpKQogIGVsc2UKICAgIHRhYmxlLmluc2VydChjb250ZW50LCBwYW5kb2MuTGluayhkZXNjcmlwdGlvblRleHQsIGhlYWRlckxpbmsoZGVzY3JpcHRpb25UZXh0KSkpCiAgZW5kCmVuZAoKZnVuY3Rpb24gUGFyYShlbCkKICBsb2NhbCBjb250ZW50ID0gZWwuY29udGVudAogIGNvbnRlbnQgPSBQcm9jZXNzTWF0aChjb250ZW50KQogIGNvbnRlbnQgPSBQcm9jZXNzSW50ZXJuYWxMaW5rcyhjb250ZW50KQogIGVsLmNvbnRlbnQgPSBjb250ZW50CiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gUHJvY2Vzc01hdGgoZWxlbWVudHMpCiAgbG9jYWwgY29udGVudCA9IHt9CiAgbG9jYWwgaW5fZGlzcGxheV9tYXRoID0gZmFsc2UKICBmb3IgXywgaXRlbSBpbiBwYWlycyhlbGVtZW50cykgZG8KICAgIGlmIGl0ZW0udCA9PSAnU3RyJ2FuZCBpdGVtLnRleHQgPT0gIiQkIiB0aGVuCiAgICAgIGluX2Rpc3BsYXlfbWF0aCA9IG5vdCBpbl9kaXNwbGF5X21hdGgKICAgIGVsc2UKICAgICAgaWYgaW5fZGlzcGxheV9tYXRoIHRoZW4KICAgICAgICBpZiBpdGVtLnQgPT0gJ1Jhd0lubGluZScgYW5kIGl0ZW0uZm9ybWF0ID09ICd0ZXgnIHRoZW4KICAgICAgICAgIGxvY2FsIG4gPSBwYW5kb2MuTWF0aCgnRGlzcGxheU1hdGgnLCAnXG4nIC4uIGl0ZW0udGV4dCAuLiAnXG4nKQogICAgICAgICAgdGFibGUuaW5zZXJ0KGNvbnRlbnQsIE1hdGgobikpCiAgICAgICAgZWxzZQogICAgICAgICAgdGFibGUuaW5zZXJ0KGNvbnRlbnQsIGl0ZW0pCiAgICAgICAgZW5kCiAgICAgIGVsc2UKICAgICAgICB0YWJsZS5pbnNlcnQoY29udGVudCwgaXRlbSkKICAgICAgZW5kCiAgICBlbmQKICBlbmQKICByZXR1cm4gY29udGVudAplbmQKCmZ1bmN0aW9uIFByb2Nlc3NJbnRlcm5hbExpbmtzKGVsZW1lbnRzKQogIGxvY2FsIGNvbnRlbnQgPSB7fQogIGxvY2FsIGluX3NlY3Rpb25fbGluayA9IGZhbHNlCiAgbG9jYWwgbGlua0Rlc2NyaXB0aW9uID0ge30KCiAgZm9yIF8sIGl0ZW0gaW4gcGFpcnMoZWxlbWVudHMpIGRvCiAgICBpZiBpdGVtLnQgPT0gJ1N0cicgYW5kIHN0cmluZy5zdGFydHNfd2l0aChpdGVtLnRleHQsICdbWyMnKSB0aGVuCiAgICAgIGluX3NlY3Rpb25fbGluayA9IHRydWUKICAgICAgdGFibGUuaW5zZXJ0KGxpbmtEZXNjcmlwdGlvbiwgc3RyaW5nLnN1YihpdGVtLnRleHQsIDQpKQogICAgZWxzZWlmIGluX3NlY3Rpb25fbGluayB0aGVuCiAgICAgIGlmIHN0cmluZy5lbmRzX3dpdGgoaXRlbS50ZXh0LCAnXV0nKSB0aGVuCiAgICAgICAgdGFibGUuaW5zZXJ0KGxpbmtEZXNjcmlwdGlvbiwgc3RyaW5nLnN1YihpdGVtLnRleHQsIDEsIC0zKSkKICAgICAgICBpbnNlcnRMaW5rKGNvbnRlbnQsIGxpbmtEZXNjcmlwdGlvbikKICAgICAgICBpbl9zZWN0aW9uX2xpbmsgPSBmYWxzZQogICAgICAgIGxpbmtEZXNjcmlwdGlvbiA9IHt9CiAgICAgIGVsc2UKICAgICAgICB0YWJsZS5pbnNlcnQobGlua0Rlc2NyaXB0aW9uLCBpdGVtLnRleHQpCiAgICAgIGVuZAogICAgZWxzZQogICAgICB0YWJsZS5pbnNlcnQoY29udGVudCwgaXRlbSkKICAgIGVuZAogIGVuZAogIHJldHVybiBjb250ZW50CmVuZAoKZnVuY3Rpb24gUGxhaW4oZWwpCiAgZWwuY29udGVudCA9IFByb2Nlc3NJbnRlcm5hbExpbmtzKGVsLmNvbnRlbnQpCiAgcmV0dXJuIGVsCmVuZAoKZnVuY3Rpb24gUGFuZG9jKGVsKQogIHJldHVybiBlbAplbmQK"),e=>e.charCodeAt(0)),JC=Object.freeze(Object.defineProperty({__proto__:null,default:hC},Symbol.toStringTag,{value:"Module"})),SC=Uint8Array.from(atob("dHJhdmVyc2UgPSAndG9wZG93bicKCm1hdGhfYmxvY2tfdGV4dCA9IG5pbApmdW5jdGlvbiBwcm9jZXNzKGVsKQoKICAgLS0gTWF0aEJsb2NrIHN0YXJ0IG9yIGVuZAogICBpZiBlbC50ID09ICdTdHInIGFuZCBlbC50ZXh0ID09ICckJCcgdGhlbgogICAgIGlmIG1hdGhfYmxvY2tfdGV4dCA9PSBuaWwgdGhlbiAgICAgICAgICAgIC0tIHN0YXJ0CiAgICAgICBtYXRoX2Jsb2NrX3RleHQgPSAnJwogICAgIGVsc2UgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0tIGVuZAogICAgICAgbG9jYWwgbWF0aF9ibG9jayA9IHBhbmRvYy5NYXRoKCdEaXNwbGF5TWF0aCcsICdcbicgLi4gbWF0aF9ibG9ja190ZXh0IC4uICdcbicpCiAgICAgICBtYXRoX2Jsb2NrX3RleHQgPSBuaWwKICAgICAgIHJldHVybiBtYXRoX2Jsb2NrCiAgICAgZW5kCiAgICAgcmV0dXJuIHt9CiAgIGVuZAoKICBpZiBtYXRoX2Jsb2NrX3RleHQgdGhlbgogICAgaWYgKGVsLnQgPT0gJ1Jhd0lubGluZScgb3IgZWwudCA9PSAnUmF3QmxvY2snKSBhbmQgZWwuZm9ybWF0ID09ICd0ZXgnIHRoZW4KICAgICAgbWF0aF9ibG9ja190ZXh0ID0gbWF0aF9ibG9ja190ZXh0IC4uIGVsLnRleHQKICAgICAgcmV0dXJuIHt9CiAgICBlbHNlaWYgZWwudCA9PSAnU3RyJyB0aGVuCiAgICAgIG1hdGhfYmxvY2tfdGV4dCA9IG1hdGhfYmxvY2tfdGV4dCAuLiBlbC50ZXh0CiAgICAgIHJldHVybiB7fQogICAgZWxzZWlmIGVsLnQgPT0gJ1NvZnRCcmVhaycgb3IgZWwudCA9PSAnQnVsbGV0TGlzdCcgdGhlbgogICAgICByZXR1cm4ge30KICAgIGVuZAogIGVuZAogIHJldHVybiBlbAplbmQKCmZ1bmN0aW9uIFJhd0lubGluZShlbCkgCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gUmF3QmxvY2soZWwpIAogIHJldHVybiBwcm9jZXNzKGVsKQplbmQKCmZ1bmN0aW9uIFN0cihlbCkKICByZXR1cm4gcHJvY2VzcyhlbCkKZW5kCgpmdW5jdGlvbiBTb2Z0QnJlYWsoZWwpCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gSGVhZGVyKGVsKQogIHJldHVybiBwcm9jZXNzKGVsKQplbmQKCmZ1bmN0aW9uIFBhcmEoZWwpCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gUGxhaW4oZWwpCiAgcmV0dXJuIHByb2Nlc3MoZWwpCmVuZAoKZnVuY3Rpb24gQnVsbGV0TGlzdChlbCkKICByZXR1cm4gcHJvY2VzcyhlbCkKZW5kCgoKCgoKCg=="),e=>e.charCodeAt(0)),FC=Object.freeze(Object.defineProperty({__proto__:null,default:SC},Symbol.toStringTag,{value:"Module"})),pC=Uint8Array.from(atob("CnJldHVybiB7CiAgICB7CiAgICAgICAgTWF0aCA9IGZ1bmN0aW9uIChlbGVtKQogICAgICAgICAgICBpZiBlbGVtLnRleHQ6ZmluZCgiXiVzKlxcYmVnaW57Iikgfj0gbmlsIHRoZW4KICAgICAgICAgICAgICAgIHJldHVybiBwYW5kb2MuUmF3SW5saW5lKCd0ZXgnLCBlbGVtLnRleHQpCiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgICAgIHJldHVybiBlbGVtCiAgICAgICAgICAgIGVuZAogICAgICAgIGVuZCwKICAgIH0KfQo="),e=>e.charCodeAt(0)),UC=Object.freeze(Object.defineProperty({__proto__:null,default:pC},Symbol.toStringTag,{value:"Module"})),NC=Uint8Array.from(atob("b3MucGxhdGZvcm0gPSBuaWwKaWYgb3MucGxhdGZvcm0gPT0gbmlsIHRoZW4KICBsb2NhbCBsaWJFeHQgPSBwYWNrYWdlLmNwYXRoOm1hdGNoKCIlcFtcXHwvXT9cXC4lcCglYSspIikKICBpZiBsaWJFeHQgPT0gJ2RsbCcgdGhlbgogICAgb3MucGxhdGZvcm0gPSAiV2luZG93cyIKICAgIHJlcXVpcmUidXRmOF9maWxlbmFtZXMiCiAgZWxzZWlmIGxpYkV4dCA9PSAnc28nIHRoZW4KICAgIG9zLnBsYXRmb3JtID0gIkxpbnV4IgogIGVsc2VpZiBsaWJFeHQgPT0gJ2R5bGliJyB0aGVuCiAgICBvcy5wbGF0Zm9ybSA9ICJNYWNPUyIKICBlbmQKZW5kCgoKb3MuY29weSA9IGZ1bmN0aW9uKHNyYywgZGVzdCkKICBpZiBvcy5wbGF0Zm9ybSA9PSAiV2luZG93cyIgdGhlbgogICAgc3JjID0gc3RyaW5nLmdzdWIoc3JjLCAiLyIsICJcXCIpCiAgICBvcy5leGVjdXRlKCdjb3B5ICInIC4uIHNyYyAuLiAnIiAiJyAuLiBkZXN0IC4uICciJykKICBlbHNlCiAgICBvcy5leGVjdXRlKCdjcCAiJyAuLiBzcmMgLi4gJyIgIicgLi4gZGVzdCAuLiAnIicpCiAgZW5kCmVuZAoKb3MubWtkaXIgPSBmdW5jdGlvbihkaXIpCiAgaWYgb3MuZXhpc3RzKGRpcikgdGhlbgogICAgcmV0dXJuCiAgZW5kCiAgaWYgb3MucGxhdGZvcm0gPT0gIldpbmRvd3MiIHRoZW4KICAgIG9zLmV4ZWN1dGUoJ21rZGlyICInIC4uIGRpciAuLiAnIicpCiAgZWxzZQogICAgb3MuZXhlY3V0ZSgnbWtkaXIgLXAgIicgLi4gZGlyIC4uICciJykKICBlbmQKZW5kCgpvcy5leGlzdHMgPSBmdW5jdGlvbihwYXRoKQogIGlmIG9zLnBsYXRmb3JtID09ICJXaW5kb3dzIiB0aGVuCiAgICBwYXRoID0gc3RyaW5nLmdzdWIocGF0aCwgIi8iLCAiXFwiKQogICAgbG9jYWwgXywgXywgY29kZSA9IG9zLmV4ZWN1dGUoJ2lmIGV4aXN0ICInIC4uIHBhdGggLi4gJyIgKGV4aXQgMCkgZWxzZSAoZXhpdCAxKScpCiAgICByZXR1cm4gY29kZSA9PSAwCiAgZWxzZQogICAgbG9jYWwgXywgXywgY29kZSA9IG9zLmV4ZWN1dGUoJ3Rlc3QgLWUgIicgLi4gcGF0aCAuLiAnIicpCiAgICByZXR1cm4gY29kZSA9PSAwCiAgZW5kCmVuZAoKc3RyaW5nLnN0YXJ0c193aXRoID0gZnVuY3Rpb24oc3RyLCBzdGFydCkKICAgcmV0dXJuIHN0cjpzdWIoMSwgI3N0YXJ0KSA9PSBzdGFydAplbmQKCnN0cmluZy5lbmRzX3dpdGggPSBmdW5jdGlvbihzdHIsIGVuZGluZykKICAgcmV0dXJuIGVuZGluZyA9PSAiIiBvciBzdHI6c3ViKC0jZW5kaW5nKSA9PSBlbmRpbmcKZW5kCgoKcmV0dXJuIHsKICBvcyA9IG9zLAogIHN0cmluZyA9IHN0cmluZwp9"),e=>e.charCodeAt(0)),YC=Object.freeze(Object.defineProperty({__proto__:null,default:NC},Symbol.toStringTag,{value:"Module"})),uC=Uint8Array.from(atob("bG9jYWwgZnVuY3Rpb24gZW5jb2RlIChzdHIpCiAgc3RyID0gc3RyaW5nLmdzdWIgKHN0ciwgIihbXjAtOWEtekEtWiAhJygpKi5ffi1dKSIsIC0tIGxvY2FsZSBpbmRlcGVuZGVudAogICAgZnVuY3Rpb24gKGMpIHJldHVybiBzdHJpbmcuZm9ybWF0ICgiJSUlMDJYIiwgc3RyaW5nLmJ5dGUoYykpIGVuZCkKICBzdHIgPSBzdHJpbmcuZ3N1YiAoc3RyLCAiICIsICIlJTIwIikKICByZXR1cm4gc3RyCiBlbmQKCgpsb2NhbCBmdW5jdGlvbiBkZWNvZGUgKHN0cikKICBzdHIgPSBzdHJpbmcuZ3N1YiAoc3RyLCAiJSUyMCIsICIgIikKICBzdHIgPSBzdHJpbmcuZ3N1YiAoc3RyLCAiJSUoJXgleCkiLCBmdW5jdGlvbihoKSByZXR1cm4gc3RyaW5nLmNoYXIodG9udW1iZXIoaCwxNikpIGVuZCkKICByZXR1cm4gc3RyCmVuZAoKcmV0dXJuIHsKICBlbmNvZGUgPSBlbmNvZGUsCiAgZGVjb2RlID0gZGVjb2RlCn0="),e=>e.charCodeAt(0)),kC=Object.freeze(Object.defineProperty({__proto__:null,default:uC},Symbol.toStringTag,{value:"Module"})),xC=Uint8Array.from(atob(""),e=>e.charCodeAt(0)),BC=Object.freeze(Object.defineProperty({__proto__:null,default:xC},Symbol.toStringTag,{value:"Module"})),yC=Uint8Array.from(atob(""),e=>e.charCodeAt(0)),fC=Object.freeze(Object.defineProperty({__proto__:null,default:yC},Symbol.toStringTag,{value:"Module"})),TC=Uint8Array.from(atob(""),e=>e.charCodeAt(0)),QC=Object.freeze(Object.defineProperty({__proto__:null,default:TC},Symbol.toStringTag,{value:"Module"})),EC=Uint8Array.from(atob("XGRvY3VtZW50Y2xhc3N7YXJ0aWNsZX0KCgolIGlmIHlvdSBuZWVkIHRvIHBhc3Mgb3B0aW9ucyB0byBuYXRiaWIsIHVzZSwgZS5nLjoKJSAgICAgXFBhc3NPcHRpb25zVG9QYWNrYWdle251bWJlcnMsIGNvbXByZXNzfXtuYXRiaWJ9CiUgYmVmb3JlIGxvYWRpbmcgbmV1cmlwc18yMDIzCgoKJSByZWFkeSBmb3Igc3VibWlzc2lvbgpcdXNlcGFja2FnZVtmaW5hbF17bmV1cmlwc30KCgolIHRvIGNvbXBpbGUgYSBwcmVwcmludCB2ZXJzaW9uLCBlLmcuLCBmb3Igc3VibWlzc2lvbiB0byBhclhpdiwgYWRkIGFkZCB0aGUKJSBbcHJlcHJpbnRdIG9wdGlvbjoKJSAgICAgXHVzZXBhY2thZ2VbcHJlcHJpbnRde25ldXJpcHNfMjAyM30KCgolIHRvIGNvbXBpbGUgYSBjYW1lcmEtcmVhZHkgdmVyc2lvbiwgYWRkIHRoZSBbZmluYWxdIG9wdGlvbiwgZS5nLjoKJSAgICAgXHVzZXBhY2thZ2VbZmluYWxde25ldXJpcHNfMjAyM30KCgolIHRvIGF2b2lkIGxvYWRpbmcgdGhlIG5hdGJpYiBwYWNrYWdlLCBhZGQgb3B0aW9uIG5vbmF0YmliOgolICAgIFx1c2VwYWNrYWdlW25vbmF0YmliXXtuZXVyaXBzXzIwMjN9CgoKXHVzZXBhY2thZ2VbdXRmOF17aW5wdXRlbmN9ICUgYWxsb3cgdXRmLTggaW5wdXQKXHVzZXBhY2thZ2VbVDFde2ZvbnRlbmN9ICAgICUgdXNlIDgtYml0IFQxIGZvbnRzClx1c2VwYWNrYWdle2h5cGVycmVmfSAgICAgICAlIGh5cGVybGlua3MKXHVzZXBhY2thZ2V7dXJsfSAgICAgICAgICAgICUgc2ltcGxlIFVSTCB0eXBlc2V0dGluZwpcdXNlcGFja2FnZXtib29rdGFic30gICAgICAgJSBwcm9mZXNzaW9uYWwtcXVhbGl0eSB0YWJsZXMKXHVzZXBhY2thZ2V7YW1zZm9udHN9ICAgICAgICUgYmxhY2tib2FyZCBtYXRoIHN5bWJvbHMKXHVzZXBhY2thZ2V7bmljZWZyYWN9ICAgICAgICUgY29tcGFjdCBzeW1ib2xzIGZvciAxLzIsIGV0Yy4KXHVzZXBhY2thZ2V7bWljcm90eXBlfSAgICAgICUgbWljcm90eXBvZ3JhcGh5Clx1c2VwYWNrYWdle3hjb2xvcn0gICAgICAgICAlIGNvbG9ycwpcdXNlcGFja2FnZXtncmFwaGljeH0KClxtYWtlYXRsZXR0ZXIKXGRlZlxtYXh3aWR0aHtcaWZkaW1cR2luQG5hdEB3aWR0aD5cbGluZXdpZHRoXGxpbmV3aWR0aFxlbHNlXEdpbkBuYXRAd2lkdGhcZml9ClxkZWZcbWF4aGVpZ2h0e1xpZmRpbVxHaW5AbmF0QGhlaWdodD5cdGV4dGhlaWdodFx0ZXh0aGVpZ2h0XGVsc2VcR2luQG5hdEBoZWlnaHRcZml9ClxtYWtlYXRvdGhlcgolIFNjYWxlIGltYWdlcyBpZiBuZWNlc3NhcnksIHNvIHRoYXQgdGhleSB3aWxsIG5vdCBvdmVyZmxvdyB0aGUgcGFnZQolIG1hcmdpbnMgYnkgZGVmYXVsdCwgYW5kIGl0IGlzIHN0aWxsIHBvc3NpYmxlIHRvIG92ZXJ3cml0ZSB0aGUgZGVmYXVsdHMKJSB1c2luZyBleHBsaWNpdCBvcHRpb25zIGluIFxpbmNsdWRlZ3JhcGhpY3Nbd2lkdGgsIGhlaWdodCwgLi4uXXt9ClxzZXRrZXlze0dpbn17d2lkdGg9XG1heHdpZHRoLGhlaWdodD1cbWF4aGVpZ2h0LGtlZXBhc3BlY3RyYXRpb30KJSBTZXQgZGVmYXVsdCBmaWd1cmUgcGxhY2VtZW50IHRvIGh0YnAKXG1ha2VhdGxldHRlcgpcZGVmXGZwc0BmaWd1cmV7aHRicH0KXG1ha2VhdG90aGVyCgokaWYoY3NsLXJlZnMpJApcbmV3bGVuZ3Roe1xjc2xoYW5naW5kZW50fQpcc2V0bGVuZ3Roe1xjc2xoYW5naW5kZW50fXsxLjVlbX0KXG5ld2xlbmd0aHtcY3NsbGFiZWx3aWR0aH0KXHNldGxlbmd0aHtcY3NsbGFiZWx3aWR0aH17M2VtfQpcbmV3bGVuZ3Roe1xjc2xlbnRyeXNwYWNpbmd1bml0fSAlIHRpbWVzIGVudHJ5LXNwYWNpbmcKXHNldGxlbmd0aHtcY3NsZW50cnlzcGFjaW5ndW5pdH17XHBhcnNraXB9ClxuZXdlbnZpcm9ubWVudHtDU0xSZWZlcmVuY2VzfVsyXSAlICMxIGhhbmdpbmctaWRlbnQsICMyIGVudHJ5IHNwYWNpbmcKIHslIGRvbid0IGluZGVudCBwYXJhZ3JhcGhzCiAgXHNldGxlbmd0aHtccGFyaW5kZW50fXswcHR9CiAgJSB0dXJuIG9uIGhhbmdpbmcgaW5kZW50IGlmIHBhcmFtIDEgaXMgMQogIFxpZm9kZCAjMQogIFxsZXRcb2xkcGFyXHBhcgogIFxkZWZccGFye1xoYW5naW5kZW50PVxjc2xoYW5naW5kZW50XG9sZHBhcn0KICBcZmkKICAlIHNldCBlbnRyeSBzcGFjaW5nCiAgXHNldGxlbmd0aHtccGFyc2tpcH17IzJcY3NsZW50cnlzcGFjaW5ndW5pdH0KIH0lCiB7fQpcdXNlcGFja2FnZXtjYWxjfQpcbmV3Y29tbWFuZHtcQ1NMQmxvY2t9WzFdeyMxXGhmaWxsXGJyZWFrfQpcbmV3Y29tbWFuZHtcQ1NMTGVmdE1hcmdpbn1bMV17XHBhcmJveFt0XXtcY3NsbGFiZWx3aWR0aH17IzF9fQpcbmV3Y29tbWFuZHtcQ1NMUmlnaHRJbmxpbmV9WzFde1xwYXJib3hbdF17XGxpbmV3aWR0aCAtIFxjc2xsYWJlbHdpZHRofXsjMX1cYnJlYWt9ClxuZXdjb21tYW5ke1xDU0xJbmRlbnR9WzFde1xoc3BhY2V7XGNzbGhhbmdpbmRlbnR9IzF9CiRlbmRpZiQKXHByb3ZpZGVjb21tYW5ke1x0aWdodGxpc3R9eyUKICBcc2V0bGVuZ3Roe1xpdGVtc2VwfXswcHR9XHNldGxlbmd0aHtccGFyc2tpcH17MHB0fX0KXHRpdGxleyR0aXRsZSR9CgoKJSBJdGVyYXRlIHRocm91Z2ggdGhlIGF1dGhvcnMgZXhjZXB0IGxhc3QgdG8gYWRkIFxBbmQuIAoKXGF1dGhvcnslCiRmb3IoYXV0aG9ycy9hbGxidXRsYXN0KSQKICAkYXV0aG9ycy5uYW1lJFxcJGF1dGhvcnMuYWZmaWxpYXRpb24kXFwkYXV0aG9ycy5pbnN0aXR1dGlvbiRcXCRhdXRob3JzLmVtYWlsJFxcJGF1dGhvcnMuYWRkcmVzcyQgXEFuZAokZW5kZm9yJAokZm9yKGF1dGhvcnMvbGFzdCkkCiAgJGF1dGhvcnMubmFtZSRcXCRhdXRob3JzLmFmZmlsaWF0aW9uJFxcJGF1dGhvcnMuaW5zdGl0dXRpb24kXFwkYXV0aG9ycy5lbWFpbCRcXCRhdXRob3JzLmFkZHJlc3MkCiRlbmRmb3IkCn0KCiUgXGF1dGhvcnslCiUgICBEYXZpZCBTLn5IaXBwb2NhbXB1cyBcXAolICAgRGVwYXJ0bWVudCBvZiBDb21wdXRlciBTY2llbmNlXFwKJSAgIENyYW5iZXJyeS1MZW1vbiBVbml2ZXJzaXR5XFwKJSAgIFBpdHRzYnVyZ2gsIFBBIDE1MjEzIFxcCiUgICBcdGV4dHR0e2hpcHBvQGNzLmNyYW5iZXJyeS1sZW1vbi5lZHV9IFxcCiUgICAlIGV4YW1wbGVzIG9mIG1vcmUgYXV0aG9ycwolICAgJSBcQW5kCiUgICAlIENvYXV0aG9yIFxcCiUgICAlIEFmZmlsaWF0aW9uIFxcCiUgICAlIEFkZHJlc3MgXFwKJSAgICUgXHRleHR0dHtlbWFpbH0gXFwKJSAgICUgXEFORAolICAgJSBDb2F1dGhvciBcXAolICAgJSBBZmZpbGlhdGlvbiBcXAolICAgJSBBZGRyZXNzIFxcCiUgICAlIFx0ZXh0dHR7ZW1haWx9IFxcCiUgICAlIFxBbmQKJSAgICUgQ29hdXRob3IgXFwKJSAgICUgQWZmaWxpYXRpb24gXFwKJSAgICUgQWRkcmVzcyBcXAolICAgJSBcdGV4dHR0e2VtYWlsfSBcXAolICAgJSBcQW5kCiUgICAlIENvYXV0aG9yIFxcCiUgICAlIEFmZmlsaWF0aW9uIFxcCiUgICAlIEFkZHJlc3MgXFwKJSAgICUgXHRleHR0dHtlbWFpbH0gXFwKJSB9CgoKXGJlZ2lue2RvY3VtZW50fQoKClxtYWtldGl0bGUKCgpcYmVnaW57YWJzdHJhY3R9CiAgJGlmKGFic3RyYWN0KSQKICAkYWJzdHJhY3QkCiAgJGVsc2UkCiAgQWRkIHlvdXIgYWJzdHJhY3QgYXQgdGhlIGJlZ2lubmluZyBvZiB5b3VyIG1hcmtkb3duIGZpbGUgbGlrZSB0aGlzIAogIFxiZWdpbnt2ZXJiYXRpbX0KICAtLS0gCiAgdGl0bGU6ICJZb3VyIFRpdGxlIiAKICBhYnN0cmFjdDogInlvdXIgYWJzdHJhY3QgaGVyZSIKICBhdXRob3JzOgogIC0gbmFtZTogTGVvbmFyZG8gVi4gQ2FzdG9yaW5hCiAgICBhZmZpbGlhdGlvbjogU2Nob29sIG9mIEluZm9ybWF0aWNzCiAgICBpbnN0aXR1dGlvbjogVW5pdmVyc2l0eSBvZiBFZGluYnVyZ2gKICAgIGVtYWlsOiBqdXN0YW5lbWFpbEBkb21haW4uZXh0CiAgICBhZGRyZXNzOiBFZGluYnVyZ2gKICAtIG5hbWU6IENvYXV0aG9yCiAgICBhZmZpbGlhdGlvbjogQWZmaWxpYXRpb24KICAgIGluc3RpdHV0aW9uOiBJbnN0aXR1dGlvbgogICAgZW1haWw6IGNvYXV0aG9yQGV4YW1wbGUuY29tCiAgICBhZGRyZXNzOiBBZGRyZXNzCiAgLS0tCiAgXGVuZHt2ZXJiYXRpbX0KICBUaGlzIGlzIGNhbGxlZCBZQU1MIGZyb250bWF0dGVyLiBJZiB5b3Ugc2V0IHlvdXIgYWJzdHJhY3QgY29ycmVjdGx5IHlvdSBzaG91bGQgbm90IHNlZSB0aGlzIG1lc3NhZ2UuCiAgJGVuZGlmJApcZW5ke2Fic3RyYWN0fQoKCiRib2R5JAoKJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlCgoKXGVuZHtkb2N1bWVudH0="),e=>e.charCodeAt(0)),KC=Object.freeze(Object.defineProperty({__proto__:null,default:EC},Symbol.toStringTag,{value:"Module"})),Ic=(e,l)=>[e,Object.entries(l).map(([t,c])=>[t.substring(e.length+3),c.default])],gc=[Ic("lua",Object.assign({"../lua/citefilter.lua":AC,"../lua/markdown+hugo.lua":GC,"../lua/markdown.lua":JC,"../lua/math_block.lua":FC,"../lua/pdf.lua":UC,"../lua/polyfill.lua":YC,"../lua/url.lua":kC,"../lua/utf8_filenames.lua":BC})),Ic("textemplate",Object.assign({"../textemplate/dissertation.tex":fC,"../textemplate/neurips.sty":QC,"../textemplate/neurips.tex":KC}))];class HC extends We.Plugin{constructor(l,t){super(l,t),this.lang=uc.current,this.saveSettings=We.debounce(this.saveSettings.bind(this),1e3,!0)}async onload(){await this.releaseResources(),await this.loadSettings();const{lang:l}=this;this.addSettingTab(new bC(this)),this.addCommand({id:"obsidian-enhancing-export:export",name:l.exportToOo,icon:"document",callback:()=>{const t=this.app.workspace.getActiveFile();t?Ml.show(this,t):new We.Notice(l.pleaseOpenFile,2e3)}}),this.addCommand({id:"obsidian-enhancing-export:export-with-previous",name:l.exportWithPrevious,icon:"document",callback:async()=>{const t=this.app.workspace.getActiveFile();if(t){if(this.settings.lastExportType&&this.settings.lastExportDirectory){const c=this.settings.items.find(n=>n.name===this.settings.lastExportType);if(c){await kc(this,t,oe(this.settings.lastExportDirectory),void 0,c);return}}Ml.show(this,t)}else new We.Notice(l.pleaseOpenFile,2e3)}}),this.registerEvent(this.app.workspace.on("file-menu",(t,c)=>{c instanceof We.TFile&&t.addItem(n=>{n.setTitle(l.exportToOo).setIcon("document").onClick(()=>{Ml.show(this,c)})}).addSeparator()}))}async resetSettings(){this.settings={...JSON.parse(JSON.stringify(Pe)),lastExportDirectory:this.settings.lastExportDirectory},await this.saveSettings()}async loadSettings(){const l=Object.assign({},Pe,await this.loadData());l.items.forEach(t=>{Object.assign(t,Object.assign(Pe.items.find(c=>c.name===t.name)??{},t))});for(const t of Pe.items)l.items.every(c=>c.name!==t.name)&&l.items.push(t);this.settings=l}async saveSettings(){console.log("[obsidian-enhancing-export] saveSettings",this.settings);const l=JSON.parse(JSON.stringify(this.settings));if(l.items.forEach(t=>{const c=Pe.items.find(n=>n.name===t.name);c&&Object.keys(t).forEach(n=>{n!=="name"&&JSON.stringify(t[n])===JSON.stringify(c[n])&&delete t[n]})}),l.env)for(const t of Object.keys(l.env)){const c=l.env[t];if(JSON.stringify(c)===JSON.stringify(Il[t])){delete l.env[t];continue}const n=oe(Il,t);for(const[I,i]of Object.entries(c))i===n[I]&&delete c[I];Object.keys(c).length===0&&delete l.env[t]}await this.saveData(l)}async releaseResources(){const{adapter:l}=this.app.vault;for(const[t,c]of gc){const n=nl.join(this.manifest.dir,t);await l.mkdir(n);for(const[I,i]of c){const g=nl.join(n,I);await l.writeBinary(g,i)}}gc.length=0}}exports.default=HC;
